// Colors
$bgDark: #1e2229;
$bgMed: #2e333f;
$bgLight: #545d73;
$bgLighter: #737f9d;
$lightRed: #ffa386;
$red: #e34d00;
$darkRed: #791105;
$softRed: #59374b;
$orange: #ffcc00;
$darkOrange: #d56932;
$green: #cfdd40;
$help: #79dd8a;
$helpMed: #5eab6b;
$helpDark: #3c6148;
$helpDarker: #273f2f;
$mainPanelNormalWid: 300px;
$mainPanelCompactWid: 150px;

// Shortcuts
@mixin resetMargin() {
	margin: 0;
	padding: 0;
}

@font-face {
	font-family: Roboto;
	src: url("../fonts/RobotoCondensed-Light.ttf");
}

@font-face {
	font-family: Roboto Bold;
	src: url("../fonts/RobotoCondensed-Bold.ttf");
}


body {
	margin: 0;
	padding: 0;
	background: $bgDark;
	color: white;
	font-family: "Arial";
	font-size: 11pt;
}

ul {
	margin: 0;
	padding: 0;
	list-style: none;
	li {
		margin: 0;
		padding: 0;
	}
}

* {
	user-select: none;
}

a {
	color: $orange;
}

img {
	vertical-align: middle;
}

xml {
	display: none;
}

h1 { color: #ff00ff; } // should not be used

h1,
h2,
h3,
h4,
h5 {
	@include resetMargin();

	.icon {
		vertical-align: bottom;
		width: 2em;
		height: 2em;
	}

	.icon,
	img {
		margin-right: 4px;
	}
}

h1 {
	font-family: Roboto;
}

h2 {
	margin-bottom: 32px;
	padding-bottom: 8px;
	border-bottom: 1px solid $orange;

	font-family: Roboto;
	font-size: 18pt;
	color: $orange;
	text-transform: uppercase;
}

h3 {
	margin-top: 16px;
	margin-bottom: 8px;
	padding-bottom: 2px;
	border-bottom: 1px solid $orange;

	font-family: Roboto;
	font-size: 13pt;
	color: $orange;
	text-transform: uppercase;
}

h4 {
	margin-bottom: 4px;
	padding-bottom: 2px;

	font-family: Roboto;
	font-size: 12pt;
	color: $orange;
	text-transform: uppercase;
}

hr {
	@include resetMargin();
	border: none;
	background: transparent;
	margin-top: 8px;
	margin-bottom: 8px;
	border-bottom: 1px solid $bgLight;
}

button {
	width: 100%;
	margin: 1px;
	padding: 10px;

	color: white;
	text-transform: uppercase;
	text-align: center;
	border: none;
	box-shadow: 0px -2px 0px rgba(0,0,0, 0.3) inset,
		0px 0px 2px rgba(255, 255, 255, 0.22) inset,
		0px 2px 1px rgba(0,0,0, 0.3);
	background-color: $red;
	cursor: pointer;
	text-shadow: 0px 1px 0px rgba(0, 0, 0, 0.28);

	&:hover {
		background-color: #ff5d4a;
	}

	>.icon {
		// margin: -4px;
		width: 1.7em;
		height: 1.7em;
	}

	&:focus {
		outline: inherit;
	}

	&.active {
		background-color: $orange;
		border-color: #ffff00;
	}

	&[href] {
		display: flex;
		justify-content: center;

		background-color: $bgLight;
		text-decoration: none;
		text-transform: none;

		box-shadow: 0px -2px 0px rgba(0,0,0, 0.3) inset,
			0px 2px 0px rgba(0,0,0, 0.4);

		.icon {
			margin-right: 4px;
			opacity: 0.5;
		}

		&:hover {
			background-color: $bgLighter;
		}
	}

	&.cancel,
	&.gray,
	&.grey {
		background-color: $bgLight;
		&:hover {
			background-color: $bgLighter;
		}
	}

	&.blue {
		background-color: #2a73ab;
		&:hover {
			background-color: #348fd5;
		}
	}

	&.red {
		background-color: $darkRed;
		&:hover {
			background-color: $red;
		}
	}

	&.help {
		background-color: $helpMed;
		&:hover {
			background-color: $help;
		}
	}

	&.discord {
		background-color: #7289DA !important;
		&:hover {
			background-color: #85A0FF !important;
		}
	}

	&.guide {
		padding: 8px;
		font-size: 8.5pt;
		text-transform: none;
		background-color: $helpDark;
		color: $help;
		&:hover {
			background-color: $helpMed;
			color: white;
		}
	}

	&.blue {
		background-color: #2a73ab;
		&:hover {
			background-color: #348fd5;
		}
	}

	&.green {
		background-color: $helpMed;
		&:hover {
			background-color: $help;
		}
	}

	&.dark {
		background-color: $bgDark;
		&:hover {
			background-color: $bgLight;
		}
	}

	&.transparent {
		box-shadow: none;
		background-color: transparent;
		&:hover {
			background-color: $orange;
		}
	}

	&.context {
		border: 1px solid rgba(0,0,0, 0.2);
		border-radius: 2px;
		background-color: rgba(0, 0, 0, 0.1);
		&:hover {
			border-color: black;
			background: black;
		}
	}
}


.appLogo {
	min-width: 300px;
	min-height: 100px;
	background-image: url("../img/LDtk-simple.svg");
	background-repeat: no-repeat;
	background-size: contain;
	background-position: center;
	&.full {
		background-image: url("../img/LDtk.svg");
	}
	&.shine {
		background-image: url("../img/LDtk-shine-1024.png");
	}
}






#miniNotif {
	position: absolute;
	z-index: 98;
	bottom: 15px;
	left: 0px;
	display: none;
	overflow: hidden;

	color: white;
	font-size: 9pt;
	background-color: rgba(0, 0, 0, 0.85);
	padding: 4px;
	padding-left: 16px;
	border-radius: 3px;
	border-top-left-radius: 0px;
	border-bottom-left-radius: 0px;

	pointer-events: none;
	animation-duration: 1s;
	animation-name: miniNotifArrival;

	@keyframes miniNotifArrival {
		from {
			padding-left: 0px;
		}
		to {
			padding-left: 16px;
		}
	}
}

#updateInstall {
	display: none;
	position: absolute;
	top: 15px;
	right: 0;
	z-index: 99;

	button {
		display: grid;
		grid-template-rows: auto auto;
		width: auto;
		padding: 8px;
		padding-right: 16px;

		text-align: left;

		animation: slideUp 2s;
		box-shadow: 0px 3px 0px #b53d00, 0px 0px 16px $red;

		strong {
			font-size: 1.2em;
			margin-bottom: 4px;
		}

		em {
			opacity: 0.7;
			font-size: 0.8em;
			font-style: normal;
		}
	}
}


.buttons {
	display: flex;
	flex-wrap: wrap;
	margin-top: 2px;
	margin-bottom: 2px;
	border-radius: 6px;
	overflow: hidden;
	button {
		flex: 1 1 0;
	}
	button.debug {
		flex: 0 0 0;
		display: none;
	}
	button.small {
		flex: 0.2 1 0;
	}
}

.help:not(.icon):not(button) {
	color: $help;
	font-family: Roboto;
	font-size: 1.1em;
	padding: 10px;
	border: 1px dotted $help;
}

a.exploreTo {
	display: flex;
	max-width: 24px;
	align-items: center;
	justify-items: center;

	flex: 0 0 auto !important;
	padding: 4px;
	background-color: $bgLight;
	border-radius: 3px;
	cursor: pointer;

	&:hover {
		color: black;
		background-color: $orange;
	}

	.icon {
		width: 1.5em;
		height: 1.5em;
	}
}

.progressBar {
	position: relative;
	margin-bottom: 20px;
	min-width: 400px;
	height: 8px;
	background-color: $bgDark;
	border: 1px solid $orange;
	padding: 1px;
	border-radius: 2px;

	.barWrapper {
		position: absolute;
		z-index: 1;
		width: calc( 100% - 2px );
		height: calc( 100% - 2px );
		top: 1px;
		left: 1px;
		.bar {
			min-width: 1px;
			width: 1px;
			height: 100%;
			background-color: $orange;
			box-shadow: 0px 0px 8px $darkOrange, 0px 0px 16px $darkRed;
			box-sizing: border-box;
			border-radius: 3px;
		}
	}
	.label {
		position: absolute;
		z-index: 2;
		right: 1px;
		top: 12px;
		color: white;
		font-size: 9pt;
		color: $bgLighter;
	}
}

div.warning:not(.window) {
	box-sizing: border-box;
	padding: 8px;
	margin-top: 4px;
	margin-bottom: 16px;
	border: 1px dashed red;
	color: white;
	box-shadow: 0px 0px 32px darkred inset, 0px 0px 4px darkred;
	text-shadow: 0px -1px 4px red, 0px 1px 4px red;
	background-color: rgba(0,0,0, 0.66);
}

div.safe:not(.window) {
	box-sizing: border-box;
	padding: 8px;
	margin-top: 4px;
	margin-bottom: 16px;
	border: 1px dashed $help;
	color: white;
	box-shadow: 0px 0px 32px $helpDark inset, 0px 0px 4px helpDark;
	text-shadow: 0px -1px 4px $help, 0px 1px 4px $helpDark;
	background-color: $helpDark;
}

div.info {
	display: grid;
	justify-items: center;
	align-items: center;
	box-sizing: border-box;
	font-size: 14pt;
	width: 32px;
	height: 32px;
	margin-left: 4px;

	font-weight: bold;
	text-align: center;
	color: $help;
	border: 3px solid $help;
	border-radius: 16px;
	cursor: help;

	&:hover {
		color: $orange;
		border-color: $orange;
	}

	&::before {
		content: "i";
	}
}

span.key,
div.key {
	display: inline-block;
	margin: 2px;
	padding: 1px;
	padding-left: 2px;
	padding-right: 2px;
	min-width: 16px;

	// color: #6d5f4d;
	text-align: center;
	text-transform: uppercase;
	font-family: Roboto;
	font-style: normal;
	text-shadow: 0px 2px 0px rgba(0, 0, 0, 0.3);

	$keyColor: #CFC5AC;
	$opacity: 0.45;
	$lighten: 0.3;
	$darken: 0.4;
	background-color: transparentize( $keyColor, $opacity );
	border: 1px solid transparentize( lighten( $keyColor, $lighten ), $opacity );
	border-bottom: 4px solid transparentize( darken( $keyColor, $darken ), $opacity );
	box-shadow: 0px 0px 4px black;
	border-radius: 2px;

	&.shift {
		color: transparent;
		text-shadow: none;
		background-image: url("../icons/shift.png");
		background-repeat: no-repeat;
		background-position: center;
		background-size: contain;

		$keyColor : #77B0FD;
		background-color: transparentize( $keyColor, $opacity );
		border-color: transparentize( lighten( $keyColor, $lighten ), $opacity );
		border-bottom-color: transparentize( darken( $keyColor, $darken ), $opacity );
	}
	&.meta {
		color: transparent;
		background-image: url("../icons/meta.png");
		background-repeat: no-repeat;
		background-position: center;
		background-size: contain;

		$keyColor : #FD4F66;
		background-color: transparentize( $keyColor, $opacity );
		border-color: transparentize( lighten( $keyColor, $lighten ), $opacity );
		border-bottom-color: transparentize( darken( $keyColor, $darken ), $opacity );
	}
	&.ctrl {
		$keyColor : #FD4F66;
		background-color: transparentize( $keyColor, $opacity );
		border-color: transparentize( lighten( $keyColor, $lighten ), $opacity );
		border-bottom-color: transparentize( darken( $keyColor, $darken ), $opacity );
	}
	&.alt {
		$keyColor : #FDBE22;
		background-color: transparentize( $keyColor, $opacity );
		border-color: transparentize( lighten( $keyColor, $lighten ), $opacity );
		border-bottom-color: transparentize( darken( $keyColor, $darken ), $opacity );
	}
}


.path {
	flex: 1 1 auto;
	text-align: right;
	overflow: auto;
	opacity: 1;
	align-items: center;

	span {
		vertical-align: middle;
	}
	span+span {
		margin-left: 2px;
	}

	span:not(.slash) {
		display: inline-block;
		font-size: 9pt;

		&:last-of-type {
			color: white !important;
			font-weight: bold;
			font-size: 10pt;
		}
	}
	span.slash {
		color: $bgLighter;
		font-weight: bold;
		font-size: 12pt;
	}
	span.highlight {
		padding: 2px 4px;
		border-radius: 2px;
		color: white;
		text-shadow: 0px 2px 0px rgba(0, 0, 0, 0.3);
	}
}


canvas.tile {
	width: 32px;
	height: 32px;
	border: 1px solid $bgLight;
	border-radius: 4px;
	image-rendering: pixelated;

	&.empty {
		background-image: url("../img/stripes.png");
	}

	&.multi {
		box-shadow:
			2px 2px 0px black,
			3px 3px 0px white,
	}

	&:not(.active) {
		cursor: not-allowed;
		opacity: 0.4;
		&:hover {
			border-color: $red;
		}
	}

	&.active {
		&.empty {
			border-color: $red;
		}
		&:hover {
			border-color: $orange;
			cursor: pointer;
		}
	}

}


ul.niceList {
	box-sizing: border-box;
	padding: 4px;
	margin-top: 4px;
	min-height: 200px;
	margin-bottom: 4px;
	border: 1px solid $bgLight;
	background-color: $bgDark;
	overflow-x: hidden;

	&:first-child {
		margin-top: 0;
	}

	&:empty {
		background-image: url("../img/stripes.png");
		box-shadow: 0px 0px 16px rgba(0, 0, 0, 0.4) inset;
		text-align: center;
		padding-top: 30px;
	}

	&:empty::before {
		content: "No element";
		color: $bgLight;
		font-style: italic;
		font-family: Roboto;
		font-size: 1.3em;
	}

	&#layers:empty::before {
		content: "No layer";
	}

	li:not(.title) {
		display: grid;
		justify-items: left;
		align-items: center;
		grid-template-columns: auto min-content;
		gap: 0px 8px;
		padding: 8px;

		font-size: 12pt;

		border-bottom: 1px solid $bgDark;
		background-color: $bgMed;
		cursor: pointer;

		.sub {
			display: block;
			width: 100%;
			text-align: right;
			font-size: 0.7em;
			opacity: 0.5;
		}

		&:not(.active):hover {
			outline: 1px solid #586279;
			outline-offset: -1px;
		}

		button.context {
			padding: 0;
			min-width: 16px;
			height: 100%;
			.icon {
				width: 1em;
			}
		}
	}

	li.title {
		display: grid;
		grid-template-columns: auto min-content;
		align-items: center;

		padding: 4px;
		margin-top: 2px;

		color: $orange;
		font-size: 0.8em;
		font-family: Roboto;

		border-top: 1px solid $bgLight;

		.links {
			display: flex;
			a+a {
				margin-left: 1px;
			}
		}

		a {
			display: flex;
			justify-items: center;
			align-items: center;
			font-size: 1.1em;
			padding: 3px;
			background-color: $bgMed;
			border-radius: 2px;
			cursor: pointer;
			color: white;

			&:hover {
				background-color: white;
			}
		}
	}
	li div.error {
		grid-column: span 2;
		grid-row: 2;
		padding: 8px;
		margin-top: 4px;

		font-size: 10pt;
		color: white;
		text-transform: uppercase;

		border-radius: 4px;
		background-color: $red;
		border: 1px solid $lightRed;
		outline: none;
		box-shadow: 0px 0px 16px $red;
	}

	li.iconLeft {
		grid-template-columns: min-content auto;
		.icon,
		.entityPreview {
			order: 0;
		}
	}

	li.iconRight {
		grid-template-columns: auto min-content;
		.icon,
		.entityPreview {
			order: 1;
		}
	}

	li.active {
		background-color: $orange;
		color: black;
		box-shadow: 0px 0px 2px #ffffcc inset, 0px 0px 4px #aa0000;
	}

	li.hidden {
		opacity: 0.4;
		.vis {
			background: transparent;
			cursor: zoom-in;
		}
	}
}

ul.tabs {
	display: flex;
	flex-wrap: nowrap;
	margin-bottom: 16px;
	padding-top: 4px;
	padding-left: 4px;
	justify-items: flex-end;

	background-color: $bgDark;
	border-bottom: 1px solid $orange;
	box-shadow: 0px -4px 0px black inset;
	// overflow-y: hidden;

	li {
		font-family: Roboto;
		margin-top: 8px;
		padding: 8px;
		padding-bottom: 4px;

		color: $orange;
		background-color: $bgMed;
		box-shadow: 2px -2px 2px rgba(0, 0, 0, 0.3);
		cursor: pointer;
		border-top-left-radius: 3px;
		border-top-right-radius: 3px;

		&+li {
			margin-left: 8px;
		}

		&.active {
			color: black;
			font-weight: bold;
			background-color: $orange;
			padding-bottom: 8px;
			margin-top: 0;
		}

		&:hover:not(.active) {
			color: white;
			padding-bottom: 6px;
			margin-top: 6px;
		}
	}
}

ul.log {
	box-sizing: border-box;
	padding: 4px;
	margin-bottom: 4px;

	max-width: 80vw;
	min-width: 50vw;
	min-height: 300px;
	max-height: 80vh;

	border: 1px solid $bgLight;
	background-color: $bgDark;
	overflow: auto;

	li {
		padding: 8px;
	}
	li:hover {
		outline: 1px dashed $bgLight;
	}

	li span.op {
		display: inline-block;
		margin-left: 8px;
		padding: 2px;
		padding-left: 4px;
		padding-right: 4px;
		font-size: 8pt;
		color: white;
		background-color: $bgMed;
		color: $bgLighter;
		border-radius: 2px;
	}
	li.opAdd {
		color: #a7d93d;
		span.op {
			color: black;
			background-color: #a7d93d;
		}
	}
	li.opDateUpdated {
		color: #58d395;
		span.op {
			color: black;
			background-color: #58d395;
		}
	}
	li.opRemove {
		color: $red;
		span.op {
			color: white;
			background-color: $red;
		}
		&.unused {
			color: $bgLighter;
			span.op {
				background-color: $bgLight;
			}
		}
	}
	li.opChecksumUpdated {
		color: $bgLighter;
	}
}

.icon {
	display: inline-block;
	vertical-align: middle;
	width: 1.3em;
	height: 1.3em;
	background-position: center center;
	background-repeat: no-repeat;
	background-size: contain;
}
.icon.entity	{ background-image: url("../icons/entity.png"); }
.icon.tile		{ background-image: url("../icons/tile.png"); }
.icon.layer		{ background-image: url("../icons/layer.png"); }
.icon.intGrid	{ background-image: url("../icons/intGrid.png"); }
.icon.autoLayer	{ background-image: url("../icons/autoLayer.png") }
.icon.level		{ background-image: url("../icons/level.png"); }
.icon.project	{ background-image: url("../icons/projectSettings.png"); }
.icon.enum		{ background-image: url("../icons/enum.png"); }
.icon.close		{ background-image: url("../icons/close.png"); }
.icon.copy		{ background-image: url("../icons/copy.svg"); }
.icon.paste		{ background-image: url("../icons/paste.svg"); }
.icon.exit		{ background-image: url("../icons/exit.svg"); }
.icon.visible	{ background-image: url("../icons/visible.png"); }
.icon.hidden	{ background-image: url("../icons/hidden.png"); }
.icon.active	{ background-image: url("../icons/active.png"); }
.icon.inactive	{ background-image: url("../icons/inactive.png"); }
.icon.partial	{ background-image: url("../icons/partial.png"); }
.icon.help		{ background-image: url("../icons/help.svg"); }
.icon.manual	{ background-image: url("../icons/manual.svg"); }
.icon.doc		{ background-image: url("../icons/doc.svg"); }
.icon.new		{ background-image: url("../icons/new.svg"); }
.icon.open		{ background-image: url("../icons/open.svg"); }
.icon.web		{ background-image: url("../icons/web.svg"); }
.icon.community	{ background-image: url("../icons/community.svg"); }
.icon.bug		{ background-image: url("../icons/bug.svg"); }
.icon.tutorial	{ background-image: url("../icons/tutorial.svg"); }
.icon.gridOn	{ background-image: url("../icons/gridOn.svg"); }
.icon.gridOff	{ background-image: url("../icons/gridOff.svg"); }
.icon.stop		{ background-image: url("../icons/stop.svg"); }
.icon.settings	{ background-image: url("../icons/settings.svg"); }
.icon.delete	{ background-image: url("../icons/delete.svg"); }
.icon.edit		{ background-image: url("../icons/edit.svg"); }
.icon.update	{ background-image: url("../icons/update.svg"); }
.icon.history	{ background-image: url("../icons/history.svg"); }
.icon.expand	{ background-image: url("../icons/expand.svg"); }
.icon.discord	{ background-image: url("../icons/discord.svg"); }
.icon.json		{ background-image: url("../icons/json.svg"); }
.icon.ghost		{ background-image: url("../icons/ghost.svg"); }
.icon.love		{ background-image: url("../icons/love.svg"); }
.icon.folder	{ background-image: url("../icons/folder.svg"); }
.icon.locate	{ background-image: url("../icons/locate.svg"); }
.icon.world		{ background-image: url("../icons/world.svg"); }
.icon.checker	{ background-image: url("../icons/checker.svg"); }
.icon.singleLayer		{ background-image: url("../icons/singleLayer.svg"); }
.icon.emptySpaceOn		{ background-image: url("../icons/emptySpaceOn.png"); }
.icon.emptySpaceOff		{ background-image: url("../icons/emptySpaceOff.png"); }
.icon.contextMenu		{ background-image: url("../icons/contextMenu.svg"); }
.icon.contextMenuOpen	{ background-image: url("../icons/contextMenuOpen.svg"); }
.icon.fullscreen		{ background-image: url("../icons/fullscreen.svg"); }
.icon.fullscreen_exit	{ background-image: url("../icons/fullscreen_exit.svg"); }

.icon.mouseLeft		{ background-image: url("../icons/mouseLeft.png"); image-rendering: pixelated; }
.icon.mouseRight	{ background-image: url("../icons/mouseRight.png"); image-rendering: pixelated; }
.icon.mouseWheel	{ background-image: url("../icons/mouseWheel.png"); image-rendering: pixelated; }

.black		{ filter: brightness(0);}
.orange		{ filter: brightness(0.6) sepia(1) hue-rotate(0.25rad) saturate(10); }

.layerType {
	display: grid;
	grid-template-columns: min-content auto;
	gap: 4px;
	align-items: center;
	font-size: 12pt;

	.icon {
		width: 3em;
		height: 3em;
	}
}


.icon.fieldType {
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: center;
	width: 64px;
	height: 64px;
	overflow: hidden;
	box-sizing: border-box;

	text-transform: none;
	font-family: Roboto;

	border: 1px dashed rgba(255, 255, 255, 0.8);

	.typeName {
		font-style: normal;
		font-size: 9pt;
		opacity: 0.7;
	}

	.typeIcon {
		font-size: 21pt;
		opacity: 0.8;
		text-shadow: 0px 2px 2px rgba(0, 0, 0, 0.4);
	}
}


.icon.entityPreview {
	display: grid;
	justify-items: center;
	align-items: center;

	width: auto;
	height: auto;
	overflow: hidden;
	padding: 2px;
	background-color: $bgMed;
	border-radius: 3px;
}


.pivotEditor {
	width: calc( 3*18px );
	position: relative;
	display: grid;
	align-items: stretch;
	justify-items: stretch;
	grid-template-columns: repeat(3, 18px);
	grid-template-rows: repeat(3, 18px);

	.bg {
		position: absolute;
		margin-top: calc( 33.33% / 2 );
		margin-left: calc( 33.33% / 2 );
		width: 66.66%;
		height: 66.66%;
		border: 1px dashed white;
		z-index: -1;
	}

	label {
		display: grid;
		align-items: center;
		justify-items: center;
		cursor: pointer;
	}
	label:hover {
		outline: 1px dashed $orange;
		outline-offset: -1px;
	}
	label input[type=radio] {
		width: 50%;
		height: 50%;
		opacity: 0.7;
		cursor: pointer;
	}
	label input[type=radio]:checked {
		width: 100%;
		height: 100%;
		opacity: 1;
	}
}


ul.form {
	padding: 8px;
	border: 1px solid $bgLight;

	>li {
		display: flex;
		flex-wrap: wrap;
		align-items: flex-start;

		>* {
			flex: 1 1 0px;
		}
		>.warning {
			flex: 1 0 100%;
		}
		>.pivot {
			flex: 0 0 auto;
		}
		>input[type=text],
		>input[type=text] {
			width: 0px; // for flex min-width
		}
		>input[type=color] {
			flex: 0.1 1 64px;
		}

		>input[type=checkbox] {
			flex: 0 1 auto;
		}
		>select {
			width: 0;
			flex: 1 1 0;
		}

		div.multiLines {
			max-height: 85px;
			overflow: hidden;
			padding: 8px;

			font-style: italic;
			text-overflow: ellipsis;
			white-space: pre;

			border: 1px dashed $bgLight;
			cursor: pointer;

			&:hover {
				border-color: white;
			}
		}

		.colorWrapper {
			display: grid;
			justify-items: center;
			align-items: center;
			box-sizing: border-box;

			min-width: 64px;
			min-height: 32px;
			padding: 4px;

			color: white;
			text-shadow: 0px 2px 2px black, 0px 0px 8px black;

			border: 1px solid black;
			box-shadow: 0px 0px 2px black inset;
			cursor: pointer;
			border-radius: 2px;

			&:hover {
				outline: 1px solid white;
			}

			&.usingDefault {
				background-image: url("../img/stripes.png");
			}

			input {
				visibility: hidden;
				width: 32px !important;
				position: absolute;
			}
		}

		.imagePicker {
			display: flex;
			align-items: stretch;
			button.pick {
				flex: 1 1 auto;
				text-transform: none;
				white-space: nowrap;
				overflow: hidden;
				text-overflow: ellipsis;
			}
			button.recall {
				flex: 0 1 0px;
				padding: 3px;
			}
			button.remove {
				flex: 0 1 0px;
				padding: 3px;
			}
			.exploreTo {
				margin-bottom: 2px; // compensate nearby buttons bottom border
			}

			&.empty {
				button.pick {
					background-color: $bgLight;
				}
				button.remove {
					display: none;
				}
			}
			&.error {
				margin-top: 4px;
				margin-bottom: 4px;
				padding: 3px;
				border: 1px solid $orange;
				border-radius: 3px;
				background-color: $darkRed;
				box-shadow: 0px 0px 4px $red inset, 0px 0px 8px $orange, 0px 0px 16px $red;
			}
	}

		.locate {
			flex: 0 0 auto;
		}

		.small {
			flex: 0 1 60px;
		}

		div.info {
			flex: 0 0 32px;
		}

		div.help {
			margin-top: 8px;
			margin-bottom: 16px;
			flex: 1 0 100%;
			box-sizing: border-box;
		}

		>label:first-of-type {
			flex: 0 0 150px;
			align-self: stretch;
			padding-top: 8px;
			padding-right: 16px;
			font-weight: bold;
			text-transform: uppercase;
			text-align: right;
			font-size: 80%;
		}

		>label:not(:first-of-type) {
			align-self: center;
			text-align: right;
			padding-left: 16px;
		}

		input[type=text]:not(:read-only):hover {
			outline: 1px solid $orange;
		}

		input[type=checkbox]+label {
			flex: 1 1 auto;
			padding-right: 20px;
			white-space: nowrap;
			text-align: left;
		}

		input[type=color] {
			height: 32px;
			cursor: pointer;
			padding: 0;
		}
		input[type=color]:hover {
			outline: 1px solid $orange;
		}

		> span {
			margin: 2px;
			flex: 0 0 20px;
			align-self: center;
			opacity: 0.5;
			text-align: center;
			white-space: nowrap;
		}
		> span.long {
			flex: 1 1 20px;
			white-space: normal;
			text-align: left;
		}

		> span:last-child {
			text-align: left;
		}

		+li {
			margin-top: 8px;
		}
	}
}

select {
	display: block;
	padding: 8px;
	max-width: 100%;
	color: white;
	border: 1px solid $bgLighter;
	background-color: $bgLight;

	&:not(.gray) {
		border-radius: 3px;
		box-shadow: 0px 2px 0px transparentize($color: black, $amount: 0.7);
	}

	&:disabled {
		color: $bgMed;
		border-color: $bgMed;
		background-color: $bgDark;
	}

	&:hover {
		border-color: white;
		cursor: pointer;
	}

	&.gray {
		border: 1px dashed $bgLight;
		padding: 8px;
		color: white;
		background-color: $bgMed;
		background-image: url("../img/stripes.png");
	}

	option {
		overflow: hidden;
		color: $orange;
		background-color: $bgMed;
		cursor: pointer;
	}

	&:empty {
		background-color: transparent;
		border-color: $bgLight;
		opacity: 0.7;
	}

	&.noValue:not(:focus) {
		background-color: $bgLight;
		background-image: url("../img/stripes.png");
		color: white;
	}
	&.required:not(:focus) {
		color: white;
		background-color: $darkRed;
		border-color: $red;
		box-shadow: 0px 0px 8px $red;
	}
}

input[type=text],
input[type=number] {
	display: block;
	padding: 8px;
	color: white;
	background-color: $bgDark;
	border: 1px solid $bgLight;
	&:read-only {
		background-color: transparent;
	}
	&:focus {
		border-color: $orange;
		box-shadow: 0px 0px 4px $red;
		outline: none;
	}
}

input.quickEdit {
	cursor: ew-resize;

	&:hover {
		outline: 1px solid $orange;
	}

	&.editing {
		border-color: $orange !important;
		border-style: dashed;
		color: $orange;
		outline: none !important;
		box-shadow: 0px 0px 8px $darkOrange !important;
	}
}

input[type=checkbox] {
	width: 24px;
	height: 24px;
	&:hover {
		outline: 1px solid $orange;
	}
}

input[type="file"] {
	display: none;
}

textarea {
	resize: none;
	height: 200px;
	padding: 8px;
	color: white;
	overflow-y: auto;
	background-color: $bgDark;
	border: 1px solid $bgLight;
	box-shadow: 0px 0px 16px black inset;
	&:focus {
		border-color: $orange;
		box-shadow: 0px 0px 4px $red;
		outline: none;
	}
}

.tip {
	position: absolute;
	z-index: 99;
	box-sizing: border-box;

	border-radius: 2px;
	background-color: $helpDark;
	box-shadow: 0px 8px 16px rgba(0, 0, 0, 0.3);
	pointer-events: none;

	.content {
		display: grid;
		grid-template-columns: auto min-content;
		box-sizing: border-box;

		width: 100%;

		padding: 4px;
		padding-left: 8px;
		padding-right: 8px;
		align-items: center;

		font-size: 0.8em;
		color: $help;

		.text {
			max-width: 250px;
			text-shadow: 0px 1px 0px rgba(0,0,0, 0.5), 0px 2px 4px rgba(0,0,0, 0.5);
			font-style: italic;
			strong {
				display: block;
				color: white;
				font-style: normal;
				margin-bottom: 2px;
			}
		}

		.keys {
			font-style: normal;
			margin-left: 20px;
			white-space: nowrap;
		}

		.key {
			color: white;
		}
	}

	&.infoTip .content {
		padding: 10px;
		font-style: normal;
		font-size: 1em;
	}
	&.link {
		background-color: #425b83;
		.content {
			color: #acd6f7;
			font-family: monospace;
			font-size: 7pt;
			white-space: nowrap;
			overflow-x: hidden;
			.text {
				font-style: normal;
			}
		}
	}
}

#notificationList {
	position: absolute;
	display: flex;
	flex-direction: column;

	box-sizing: border-box;
	z-index: 99;
	bottom: 0px;
	right: 0px;
	padding-bottom: 30px;
	overflow: hidden;
	pointer-events: none;

	.notification {
		min-width: 150px;
		max-width: 300px;
		margin-bottom: 8px;

		background-color: $bgDark;
		border-left: 10px solid $bgLight;
		box-shadow: 0px 8px 16px rgba(0, 0, 0, 0.3);
		animation: slideUp 1s;

		.content {
			padding: 20px;
			padding-right: 80px;

			pre {
				font-size: 8pt;
			}
		}
	}

	.notification:not(.latest) {
		opacity: 0.5;
		border-left-width: 3px;
		transition: border 0.3s, opacity 0.3s;
		.content {
			transition: padding 0.3s ease;
			padding-top: 10px;
			padding-bottom: 10px;
		}
	}
}

.quickNotif {
	position: absolute;
	z-index: 99;
	display: grid;
	align-items: center;
	justify-items: center;
	top: 5px;

	box-sizing: border-box;
	pointer-events: none;


	.wrapper {
		display: flex;
		margin-left: 35px;
		margin-top: 15px;
		padding: 4px 16px;
		align-items: center;

		font-family: Roboto;
		font-size: 30pt;
		color: $orange;

		background-color: rgba(0, 0, 0, 0.8);
		border-radius: 8px;

		animation: slidedown 1s;

		.icon {
			margin-right: 8px;
		}
	}
}

@keyframes slideUp {
	from {
		max-height: 0;
		overflow: hidden;
	}
	to {
		max-height: 200;
	}
}

.lastChance {
	position: absolute;
	z-index: 99;
	top: 40px;
	right: 0;

	min-width: 150px;

	background-color: $darkRed;
	border-left: 4px solid $red;
	box-shadow: 0px 8px 16px rgba(0, 0, 0, 0.3);
	animation: slideUp 1.2s;

	.content {
		display: grid;
		align-items: center;
		width: 100%;
		box-sizing: border-box;
		padding: 20px;
		padding-right: 80px;
		gap: 10px;

		grid-template-columns: min-content auto;
		grid-template-rows: auto auto;
		justify-content: right;
		button {
			grid-row: 1/3;
			height: 100%;
		}
		.action {
			grid-column: 2/3;
			font-weight: bold;
			color: $orange;
		}
		.desc {
			grid-column: 2/3;
			grid-row: 2/3;
			max-width: 250px;
			font-style: italic;
			font-size: 9pt;
			color: white;
			opacity: 0.7;
		}
	}
}

.window {
	position: absolute;
	left: 0px;
	top: 0px;
	width: 100vw;
	height: 100vh;
	z-index: 98;

	.mask {
		position: absolute;
		z-index: 1;
		top: 0px;
		left: 0px;
		width: 100%;
		height: 100%;
		background-color: rgba(0,0,0,0.35);

		&.transparent {
			opacity: 0 !important;
		}
	}

	&.centered {
		display: grid;
		align-items: center;
		justify-items: center;
		>.wrapper {
			position: static;
			border-radius: 4px;
			border: none;
			box-shadow: 4px 4px 0px rgba(0, 0, 0, 0.3),
				0px 8px 32px rgba(0, 0, 0, 1);
		}
	}

	&>.wrapper {
		display: block;
		position: absolute;
		overflow: auto;
		z-index: 2;
		top: 50px;
		left: 50px;

		box-sizing: border-box;
		padding: 20px;

		background: $bgMed;
		border: 1px solid $bgLight;

		box-shadow: 0px 0px 32px black, 0px 8px 32px rgba(0, 0, 0, 0.3);
	}
}

.window.panel {
	left: 0px; // set on opening
	width: calc( 100vw - #{ $mainPanelNormalWid } );

	>button.close {
		position: absolute;
		top: 10px;
		width: auto;
		height: 45px;
		z-index: 2;
		background-color: $bgMed;
		border: 0px;
		border-top-right-radius: 3px;
		border-bottom-right-radius: 3px;
		box-shadow: 0px 5px 0px rgba(0,0,0,0.2);

		&:hover {
			background-color: $orange;
		}
	}

	&>.wrapper {
		top: 0px;
		left: 0px;
		height: 100vh;
		border-left: none;

		.content {
			width: 700px;
		}
	}
}

.window.editAppSettings {
	.wrapper .content {
		width: 600px;

		ul.form li {
			label {
				align-self: center;
				flex: 0 0 45%;
			}
		}
	}
}

.window.lockMessage {
	.wrapper .content {
		.task {
			font-family: Roboto;
			font-size: 18pt;
			color: $orange;
			p {
				margin-top: 0.5em;
				margin-bottom: 0.5em;
			}
		}
		.sub {
			color: $bgLighter;
			text-align: center;
		}
	}
}

.window.textEditor {
	.wrapper .content {
		h2 {
			margin-bottom: 8px;
		}
		.CodeMirror {
			width: 80vw;
			height: 70vh;
		}
	}
}


.window.buy {
	.wrapper .content {
		max-width: 380px;

		header {
			display: grid;
			justify-items: center;
			align-items: center;

			margin: -16px;
			margin-bottom: 16px;
			padding: 8px;

			background-color: $bgDark;

			.icon {
				width: 70px;
				height: 70px;
			}
		}

		strong {
			color: $orange;
		}
	}
}

.window.appUpdated {
	.wrapper .content {
		width: 600px;

		header {
			margin-bottom: 16px;
			font-family: Roboto;
			text-align: center;
			color: $orange;

			.version {
				font-weight: bold;
				font-size: 90pt;
				line-height: 95pt;
				text-shadow: 0px 0px 32px $darkOrange;
				em {
					display: block;
					color: $bgLighter;
					font-style: normal;
					text-transform: uppercase;
					font-size: 15pt;
					line-height: 1em;
				}
			}

			.title {
				font-size: 20pt;
				font-style: italic;
				margin-bottom: 8px;
				&:empty {
					display: none;
				}
			}
		}

		.changelog {
			margin-left: -20px;
			margin-right: -20px;
			margin-bottom: 16px;
			padding: 20px;
			max-height: 45vh;

			overflow-y: auto;
			background-color: $bgDark;

			color: #acb8d1;


			strong {
				color: white;
			}

			&>p+ul {
				border-top: 1px solid $bgLight;
				margin-top: 32px;
			}
			&>ul>li {
				border-bottom: 1px dashed $bgMed;
				padding-bottom: 8px;
				margin-bottom: 8px;
			}
		}

		#updateChangelogMd {
			display: none;
		}
	}
}

.window.progress {
	display: grid;
	align-items: flex-start;
	justify-items: center;
	>.wrapper {
		position: static;
		padding: 8px;
		.title {
			font-family: Roboto;
			color: $orange;
			font-size: 14pt;
			margin-bottom: 8px;
			// margin: 0;
			// border: none;
		}
	}
}


*.contextMenuOpen {
	outline: 1px solid $orange !important;
	// background-color: $darkOrange !important;
	button.context {
		background: black !important;
		outline: 1px solid $orange;
	}
}

.window.contextMenu {
	.wrapper {
		padding: 0px;
		border-radius: 2px;
		box-shadow: 0px 0px 16px black, 0px 4px 8px black;
		outline: 1px solid black;

		.content {
			display: grid;
			grid-auto-rows: auto;

			button {
				display: block;
				margin: 0;
				padding: 8px 20px;
				font-size: 10pt;
				color: $orange;
				text-align: left;
				background-color: $bgDark;
				&:hover {
					background-color: $orange;
					color: black;
				}
				.sub {
					display: block;
					margin-top: 2px;
					text-transform: none;
					color: $bgLighter;
					font-size: 9pt;
				}

				&.crash:not(:hover) {
					background-color: $helpDark;
				}

				&.warning {
					background-color: $darkRed;
					&:hover {
						color: white;
						background-color: $red;
					}
				}
			}
			button+button {
				border-top: 1px solid $bgMed;
			}
		}

	}
}

.window.dialog {
	overflow: hidden;

	&.confirm .wrapper {
		max-width: 400px;
		.content {
			p:first-of-type {
				margin-top: 0;
			}
		}
	}

	&.warning .wrapper {
		background-color: $darkRed;
		border-color: $red;
	}

	&.choice .wrapper {
		max-width: 500px;
		button {
			white-space: nowrap;
		}
	}

	&.message .wrapper {
		max-width: 400px;
		p {
			margin: 0;
		}
		*+p {
			margin-top: 1em;
		}
	}
	&.message.hasIcon .content {
		display: grid;
		gap: 16px;
		grid-template-columns: min-content auto;
		align-items: stretch;

		.iconWrapper {
			padding: 16px;
			background-color: black;
			border-radius: 8px;

			.icon {
				width: 4em;
				height: 4em;
			}
		}
	}

	&>.mask {
		background-color: rgba(0,0,0,0.55);
	}

	&>.wrapper {
		padding: 16px;
		box-shadow: 0px 8px 32px rgba(0, 0, 0, 0.6);

		.buttons {
			margin-top: 16px;
			flex-wrap: wrap;

			button {
				flex: 1 1 0;
				margin: 1px;
			}

			button.confirm {
				flex-grow: 2;
			}
		}
	}

	&.warning .wrapper .content {
		max-width: 400px;
	}
}


.window.sync {
	.wrapper .content {
		max-width: none;
		h2 .file {
			color: white;
			text-transform: none;
		}
		ul.log {
			li {
				display: grid;
				grid-template-columns: 100px auto;
				gap: 8px;
				align-items: center;

				.op {
					text-align: center;
					margin: 0;
				}
			}
		}
	}
}

.window.logPrint {
	.wrapper .content {
		max-width: 70vw;

		ul.log {
			min-width: auto;
			li {
				font-family: monospace;
				white-space: pre-wrap;
				border-left: 4px solid $bgLight;
				padding-left: 8px;
				color: white;
			}
			li.critical {
				border-top: 1px solid $bgLight;
				border-bottom: 1px solid $bgLight;
				border-right: 1px solid $bgLight;
				padding-top: 8px;
				padding-bottom: 8px;
			}
		}
	}
}


.window.lostFile {
	.wrapper .content {
		max-width: 50vw;
		.path {
			text-align: left;
			padding: 4px;
			background-color: $bgDark;
			border: 1px solid $red;
		}
	}
}


.window.fileChanged {
	.wrapper .content {
		max-width: 50vw;
		.path {
			text-align: left;
			padding: 4px;
			background-color: $bgDark;
			border: 1px solid $red;
		}
	}
}


.window.panel.helpPanel {
	.wrapper {
		.content {
			width: 500px;
			.appLogo {
				margin-bottom: 16px;
			}
		}
	}
	dl {
		display: grid;
		grid-template-columns: 0.5fr 1fr;
		align-items: stretch;
		gap: 1px;

		dt {
			margin: 0;

			text-align: right;
			white-space: nowrap;

			.icon {
				width: 32px;
				height: 32px;
			}
		}

		dd {
			display: grid;
			align-items: center;
			margin: 0;

			font-family: Roboto;
		}

		span.misc {
			margin-left: 3px;
			margin-right: 3px;
		}


		&.major {
			dt {
				padding: 8px;
				background-color: $bgDark;
				border-radius: 4px;
			}
			dd {
				padding: 8px;
				background-color: $bgLight;
				border-radius: 4px;
				font-size: 1.5em;
			}
		}
		&.minor {
			dt {
				padding: 4px;
				padding-right: 8px;
				background-color: $bgDark;
				border-radius: 4px;
			}
			dd {
				padding-left: 10px;
			}
		}
	}
}

.window.dialog.fieldTypes,
.window.dialog.layerTypes {
	&>.wrapper {
		width: auto;
		padding: 4px;

		.content {
			display: grid;
			width: 100%;
			gap: 2px;

			button {
				margin: 0;
			}
		}
	}
}

.window.dialog.colorPicker {
	>.wrapper {
		padding: 4px;
		background-color: $bgDark;
		border: 1px solid $bgMed;
		border-radius: 3px;

		.content {
			overflow: hidden;
			display: grid;
			grid-template-rows: 32px min-content auto;
			gap: 4px;
			.preview {
				border: 1px solid $bgLight;
				outline: 1px solid black;
				outline-offset: -2px;
			}
			.input {
				display: grid;
				grid-template-columns: auto min-content min-content;
				position: relative;
				span {
					display: flex;
					align-items: center;
					height: 100%;
					color: $bgLight;
					position: absolute;
					margin-left: 7px;
				}
				input {
					padding-left: 17px;
				}
				.copy.done {
					opacity: 0.2;
				}
				.paste:not(.enabled) {
					opacity: 0.2;
				}
			}
		}
	}
}

.window.dialog.convertFieldType {
	&>.wrapper {
		width: auto;
		padding: 2px;
		.content {
			width: 100%;
			gap: 2px;

			button {
				margin: 0;
				margin-bottom: 1px;
				text-transform: none;
				white-space: nowrap;
			}
		}
	}
}

.window.dialog.fieldTypes {
	.content {
		grid-template-columns: repeat(3, min-content);
	}
}

.window.dialog.enums {
	.content button {
		display: flex;
		width: 100%;
		padding-top: 6px;
		padding-bottom: 6px;
		text-transform: none;

		.id {
			flex: 1 0 auto;
			text-align: left;
		}
		.source {
			flex: 0 1 0;
			margin-left: 8px;
			font-size: 8pt;
			opacity: 0.7;
		}
	}
}

.window.dialog.layerTypes {
	.content {
		grid-auto-rows: 100px;
		grid-template-columns: repeat(2, 100px);

		.icon {
			display: block;
			width: 3em;
			height: 3em;
			margin: auto;
			margin-bottom: 4px;
		}
		.layerType {
			display: block;
			font-size: inherit;
		}
	}
}

.toolPopOutPlaceholder {
	width: 100%;
	height: 100%;
	outline: 2px solid red;
	background-color: darkred;
}

.window.popOutPalette {
	align-items: flex-start;
	&>.wrapper {
		overflow: hidden;
		padding: 0;
		border: none;
		outline: 1px solid white;
		box-shadow: 0px 0px 32px black;

		&>.content {
			width: #{"max(45vw, 500px)"};
			max-height: 70vh;
		}
	}
}


.panelMask {
	position: absolute;
	background-color: rgba(0,0,0,0.75);
	opacity: 0.5;
	z-index: 97;
}

ul.sortable:not(.customHandle) li:not(.fixed) {
	background-image: url("../icons/dragAlpha.svg");
	background-repeat: no-repeat;
	background-position: left center;
	padding-left: 32px !important;
	&.dragging {
		cursor: ns-resize;
	}
}
body.sorting {
	outline: 3px solid red !important;
	outline-offset: -3px;
}

ul.sortable li.dragging {
	color: white;
	outline: 1px dashed $orange;
	outline-offset: -1px;
	opacity: 0.7;
	box-shadow: 0px 0px 8px $red inset;
	background-color: $darkOrange !important;
	background-image: url("../img/stripes.png");
	background-repeat: repeat;
}


div.sortHandle {
	display: inline-block;
	background: url("../icons/drag.svg") no-repeat;
	background-position: center center;
	padding-left: 24px;
	padding-top: 32px;
	opacity: 0.3;
	cursor: move;

	&:hover {
		opacity: 1;
		background-color: $orange;
		border-radius: 2px;
	}
}


#debug {
	display: none;
	position: absolute;
	z-index: 99;
	padding: 8px;
	right: 0px;
	top: 0px;
	font-size: 9pt;
	color:white;
	text-shadow: 0px 1px 3px black;
	background-color: rgba(0, 0, 0, 0.4);
	max-width: 40vw;
	pointer-events: none;

	p {
		@include resetMargin();
		margin: 0;
	}
	p+p {
		margin-top: 3px;
		pre {
			margin: 0;
			padding: 0;
			font-family: Roboto;
		}
	}
}

#mouseCoords {
	display: flex;
	flex-wrap: nowrap;
	position: absolute;
	z-index: 99;
	right: 3px;
	bottom: 3px;
	pointer-events: none;

	span {
		padding: 4px 8px;
		font-size: 9pt;
		color:white;
		text-shadow: 0px 1px 3px black;
		background-color: rgba(0, 0, 0, 0.4);
		border-radius: 6px;
		pointer-events: none;
	}
	span+span {
		margin-left: 8px;
	}

	span.grid {
		background-color: transparentize($color: #3fc3a5, $amount: 0.6);
	}
	span.level {
		background-color: transparentize($color: #257361, $amount: 0.6);
	}
	span.world {
		background-color: transparentize($color: #233373, $amount: 0.6);
	}
}

#appMask {
	position: fixed;
	top: 0;
	left: 0;
	z-index: 999;
	width: 100vw;
	height: 100vh;
	background-color: $bgDark;
	pointer-events: none;
}

canvas#webgl {
	position: absolute;
	top: 0;
	left: 0;
	z-index: 1;

	&:not(.active) {
		visibility: hidden;
		width: 100px !important;
		height: 100px !important;
	}

	&.active {
		height: 100vh !important;
	}
}

#page {
	position: absolute;
	top: 0;
	left: 0;
	z-index: 2;
	&.locked {
		pointer-events: none;
	}
}

#page.editor {
	#permanentNotifications {
		position: absolute;
		top: 0;
		left: $mainPanelNormalWid;
		width: calc( 100vw - #{ $mainPanelNormalWid } );
		z-index: 9999;
		li {
			padding: 8px;
			font-size: 9pt;
			color: white;
			font-weight: bold;
			text-align: center;
			background-color: $red;
			&.noClick {
				pointer-events: none;
			}
			&:not(.noClick):hover {
				outline: 1px solid white;
				outline-offset: -1px;
				cursor: pointer;
			}
		}
		li#backup {
			background-color: $helpMed;
			// color: black;
		}
	}
	#mainPanel {
		position: absolute;
		top: 0;
		left: 0;
		width: $mainPanelNormalWid;
		height: 100vh;

		display: grid;
		overflow: hidden;
		grid-template-rows: repeat(4, min-content) auto;
		// grid-template-rows: min-content 250px min-content min-content auto;
		background: $bgDark;
		box-sizing: border-box;
		border-right: 2px solid black;

		#mainbar {
			overflow: hidden; // for title

			.buttons {
				margin: 0;
				border-top-left-radius: 0;
				border-top-right-radius: 0;
				border-bottom-left-radius: 0;
				margin-bottom: 4px;

				button {
					margin: 0;
					padding: 0;
					padding-top: 8px;
					padding-bottom: 8px;

					.icon {
						width: 1.7em;
						height: 1.7em;
					}
				}
			}
		}


		ul.niceList {
			min-height: auto;
		}

		ul#layers {
			overflow-x: hidden;
			overflow-y: auto;
			margin: 0;
			border: 0;
			padding: 0;
			min-height: 100px;
			max-height: 250px;
			margin-bottom: 4px;

			&:empty {
				padding: 32px;
				border: 1px solid $bgMed;
			}

			li {
				grid-template-columns: min-content min-content auto min-content;
				padding: 0;
				padding-left: 8px;
				align-items: stretch;

				.index {
					display: flex;
					align-items: center;
					min-width: 1.2em;
					text-align: center;
					color: $bgLighter;
					font-weight: bold;
					font-size: 14pt;
				}
				&.active .index {
					color: $darkOrange;
				}

				.layerIcon {
					display: flex;
					align-items: center;
				}

				.name {
					display: flex;
					align-items: center;
					overflow-x: hidden;
					padding-top: 8px;
					padding-bottom: 8px;
					font-size: 10pt;
				}

				.actions {
					display: flex;

					.vis {
						display: flex;
						align-items: center;
						padding: 0px 4px;

						color: white;
						text-shadow: 0px 0px 4px black;
						order: 2;
						border-radius: 3px;
						cursor: zoom-out;

						&:hover {
							background-color: white;
						}
					}

					a {
						display: flex;
						align-items: center;
						padding: 4px;
						margin-top: 1px;
						margin-bottom: 1px;

						color: white;
						white-space: nowrap;
						font-size: 8pt;
						text-transform: uppercase;
						text-decoration: none;

						background-color: $bgLight;
						border-radius: 3px;
						cursor: pointer;

						&:hover {
							color: black;
							background-color: white;
						}
					}
				}
			}
		}

		#guide {
			display: flex;
			min-height: 1.3em;
			flex-wrap: wrap;
			margin-bottom: 4px;
			padding: 4px;

			vertical-align: middle;
			font-family: Roboto;
			color: $help;
			font-size: 0.9em;
			align-items: stretch;
			background-color: $helpDarker;

			&:empty {
				margin: 0;
				padding: 0;
				min-height: 0;
				background-color: transparent;
			}

			>span {
				// padding: 2px;
				padding-left: 1px;
				padding-right: 8px;
				color: $help;
				font-style: italic;
				white-space: nowrap;
				flex: 0 1 auto;
				margin-right: 3px;
				margin-bottom: 1px;
				background-color: $helpDark;
				border-radius: 3px;
			}

			.key {
				color: white;
				margin: 0;
				margin-right: 1px;
				box-shadow: none;
				&:last-of-type {
					margin-right: 4px;
				}
			}
		}

		#toolOptions {
			select {
				width: 100%;
				option.bad {
					color: $bgLight;
				}
			}
		}

		#mainPaletteWrapper {
			overflow: auto;
			position: relative;

			&:empty {
				outline-color: $bgLight;
			}

			&:empty,
			.palette:empty {
				box-sizing: border-box;
				box-shadow: 0px 0px 8px $bgDark inset;
				border-top: 1px solid $bgMed;
				background-image: url("../img/stripes.png");
			}

			ul.niceList {
				height: 100%;
				box-sizing: border-box;
			}
		}
	}



	ul#editingOptions {
		position: absolute;
		top: 46px;
		left: $mainPanelNormalWid;

		display: grid;
		gap: 1px;
		background-color: $bgDark;
		padding: 3px;
		padding-left: 0;
		border-radius: 4px;
		border-top-left-radius: 0px;
		border-bottom-left-radius: 0px;

		li {
			align-items: center;
			border: 1px solid $bgLight;
			border-radius: 3px;
			padding: 4px;
			cursor: pointer;

			.icon {
				width: 24px;
				height: 24px;
			}

			&.active {
				border-color: $green;
				background-color: $helpDark;
				box-shadow: 0px 0px 4px $help, 0px 0px 16px $green inset;
				.off {
					display: none;
				}
			}

			&:hover {
				border-color: white;
			}

			&:not(.active) {
				.on {
					display: none;
				}
				.icon {
					opacity: 0.66;
				}
			}

			&.unsupported {
				cursor: not-allowed;
				border-color: transparent;
				background-image: url("../img/stripes.png");
				box-shadow: none;

				.icon {
					opacity: 0.2;
				}
			}
		}
	}


	&.compactPanel {
		#mainPanel {
			width: $mainPanelCompactWid;
			grid-template-rows: min-content 200px min-content auto;

			#mainBar {
				.buttons {
					display: grid;
					grid-template-columns: repeat(4, 25%);
					grid-template-rows: repeat(2, 32px);
					button {
						z-index: 1; // fix box-shadow depth
					}
					button.showHelp {
						grid-row: 1/2;
						grid-column: 3/4;
						z-index: 0;
					}
					button.close {
						grid-row: 1/2;
						grid-column: 4/5;
						z-index: 0;
					}
					button {
						margin: 0px;
					}
					.icon {
						width: 1.3em;
						height: 1.3em;
					}
				}
			}

			#guide {
				display: none;
			}

			ul#layers li {
				grid-template-columns: auto min-content;
				.layerIcon,
				.index {
					display: none;
				}
				.name {
					font-size: 8pt;
				}
				.actions a {
					padding: 2px;
					font-size: 7pt;
					text-transform: none;
				}
			}

			ul.niceList li {
				padding: 4px 2px;
				gap: 4px;
			}

			h2#levelName {
				font-size: 1.1em;
			}
		}

		ul#editingOptions {
			left: $mainPanelCompactWid;
			top: 74px;
			.icon {
				width: 18px;
				height: 18px;
			}
		}

		.window.panel {
			&:not(.editAllAutoLayerRules):not(.worldPanel) {
				width: calc( 100vw - #{ $mainPanelCompactWid } );
			}
		}
	}
}



#page.updating {
	display: grid;
	width: 100vw;
	height: 100vh;
	align-content: center;
	justify-content: center;
	background-color: $bgDark;

	.wrapper {
		display: grid;
		padding-top: 32px;

		.appLogo {
			margin-bottom: 16px;
		}

		.updating {
			padding: 16px;
			font-size: 1.3em;
			color: black;
			text-align: center;
			border-radius: 3px;
			background-color: $orange;
			animation: slideUp 1s;

		}
	}
}

#page.crashReport {
	width: 100vw;
	height: 100vh;
	display: grid;
	align-items: center;
	justify-items: center;
	background-color: $bgDark;
	background-image: url("../img/stripes.png");

	&>.wrapper {
		background-color: $bgMed;
		padding: 32px;
		width: 700px;
		max-width: 90vw;
		border-radius: 4px;
		box-shadow: 0px 8px 0px rgba(0, 0, 0, 0.2), 0px 0px 32px rgba(0, 0, 0, 0.3);


		a {
			text-decoration: underline;
			cursor: pointer;
			&:hover {
				color: white;
			}
		}

		.desc {
			display: grid;
			grid-template-columns: min-content auto;
			align-items: center;
			gap: 16px;
			margin-top: 16px;

			.ghost {
				width: 100px;
				height: 100px;
			}
			.text {
				border-left: 1px solid $bgLight;
				padding-left: 16px;
				border-radius: 16px;
				.arrow {
					position: absolute;
					margin-left: -32px;
					margin-top: 24px;
					width: 0;
					height: 0;
					border-top: 16px solid transparent;
					border-right: 16px solid $bgLight;
					border-bottom: 16px solid transparent;
				}

				.backup {
					color: $help;
					font-weight: bold;
					&:empty {
						display: none;
					}
				}
			}
		}

		.error {
			padding: 16px;
			margin-top: 16px;
			margin-bottom: 16px;
			color: white;
			text-shadow: 0px 0px 8px $red, 0px 0px 16px $red;
			font-family: monospace;
			white-space: pre-wrap;
			background-color: $darkRed;
			border: 1px solid $orange;
			box-shadow: 0px 0px 16px $red;
		}

		.buttons {
			button.copy,
			button.report {
				flex-grow: 0.66;
			}
			button.done {
				opacity: 0.35;
			}
		}
	}
}

#page.home {
	display: grid;
	width: 100vw;
	height: 100vh;
	align-content: center;
	background-color: $bgDark;

	&>.wrapper {
		display: grid;
		grid-template-columns: auto;
		grid-template-rows: min-content 50vh min-content;
		box-sizing: border-box;
		width: 80vw;
		min-width: 850px;
		max-width: 1000px;
		margin: auto;
		height: 100%;
		align-items: center;
		justify-content: center;

		@media( max-width:1000px ) {
			.buttons button {
				font-size: 9pt !important;
			}
		}

		header {
			padding-bottom: 30px;

			background-image: url("../img/homeBg_header.png");
			background-size: contain;
			background-repeat: no-repeat;
			background-position: bottom center;

			.appLogo {
				min-height: 160px;
			}

			.version {
				font-size: 14pt;
				color: $bgLighter;
				text-align: center;
				margin-top: 8px;
			}

			.disclaimer {
				margin-top: 8px;
				margin-bottom: 8px;
				padding: 16px;

				font-size: 9pt;

				background-color: $darkRed;
				border-radius: 3px;

				h2 {
					font-size: 10pt;
					border: none;
					margin: 0;
					padding: 0;
					margin-bottom: 4px;
				}

				p {
					margin: 0;
					margin-bottom: 4px;
				}

				strong {
					text-decoration: underline;
				}
			}

		}

		.main {
			display: grid;
			width: 70vw;
			grid-template-columns: auto 250px;
			box-sizing: border-box;
			padding-top: 30px;
			height: 100%;

			background-image: url("../img/homeBg_main.png");
			background-size: contain;
			background-repeat: no-repeat;
			background-position: top center;
		}

		.buttons {
			flex-wrap: nowrap;
			button {
				display: grid;
				grid-auto-flow: column;
				gap: 6px;
				justify-content: center;
				align-items: center;
				height: 38px;
				padding: 0px 8px;

				font-size: 11pt;
				white-space: nowrap;
				text-transform: none;

				&.small {
					flex: 0.5 1 0px;
					.icon {
						margin: 0;
					}
				}
				&.buy {
					text-transform: none;
				}
				&.settings {
					flex: 0 1 0px;
				}
			}
		}

		.files {
			display: grid;
			grid-template-rows: min-content auto;
			grid-template-columns: 0.5fr 0.5fr;
			gap: 8px;
			height: 100%;
			overflow: hidden;

			.buttons {
				grid-column: 1/3;
			}

			ul.recentFiles,
			ul.recentDirs {
				overflow-y: auto;
				margin-top: 0;
				margin-bottom: 0;
				padding: 4px;
				min-height: 0;

				li.title {
					border: 0;
					padding: 3px 0px;
				}

				&:empty {
					padding: 40px;
				}
				&:empty::before {
					color: $bgLighter;
					text-shadow: 0px 2px 8px $bgDark, 0px 2px 2px $bgDark;
				}

				li .path {
					width: 100%;
					overflow: hidden;
					white-space: nowrap;
					text-align: left;
				}
			}

			ul.recentFiles {
				&:empty::before {
					content: "No recent project file";
				}

				li {
					display: grid;
					overflow: hidden;
					grid-template-columns: auto min-content min-content;
					grid-template-rows: auto auto;

					&.missing .fileName {
						text-decoration: line-through;
						font-weight: normal;
						color: $lightRed !important;
					}

					.fileName {
						grid-column: 1/2;
						font-weight: bold;
						overflow: hidden;
						width: 100%;
						white-space: nowrap;
						text-overflow: ellipsis;
					}
					.path {
						grid-column: 1/2;
						grid-row: 2/3;

						font-size: 9pt;
						color: $bgLighter;
						text-overflow: ellipsis;
						opacity: 0.55;

						>span:last-of-type {
							display: none;
						}
					}

					&.sample {
						.fileName {
							color: $help !important;
							grid-row: 1/3;
						}
						.path {
							display: none;
						}
					}

					button.backups {
						grid-column: 2/3;
						grid-row: 1/3;
						padding: 0 2px;
						align-self: stretch;
					}

					button.context {
						grid-column: 3/4;
						grid-row: 1/3;
						align-self: stretch;
					}

					&:first-of-type {
						&:hover {
							outline-color: white;
						}
					}

					&.crash {
						border: 1px solid $help;
						background-color: $helpDark;
						box-shadow: 0px 0px 16px $help;
					}
				}

			}


			ul.recentDirs {
				&:empty::before {
					content: "No recent folder";
				}

				li {
					padding: 2px 8px;
				}
				.path {
					text-overflow: ellipsis;
				}
				li.sample .path >span {
					color: $help !important;
				}

				li.missing .path >span {
					color: $lightRed !important;
					text-decoration: line-through;
				}
			}

			.buttons {
				margin: 0;
				.exit {
					flex: 0.3 1 0;
				}
			}
		}

		.about {
			display: grid;
			grid-template-rows: auto;
			gap: 8px;
			height: 100%;
			overflow: hidden;
			margin-left: 16px;
			background-color: $bgMed;
			border-radius: 4px;

			.buttons {
				$btSize: 40px;
				display: grid;
				grid-template-rows: $btSize 100px;
				grid-auto-rows: $btSize;
				margin: 0;

				button {
					height: auto;
				}
				button {
					justify-content: flex-start;
				}
				button[href] {
					box-shadow: none;
					background-color: $bgMed;
					&:hover {
						background-color: $bgLight;
					}
					border-bottom: 1px solid $bgDark;
				}

				button.update {
					display: grid;
					grid-template-columns: min-content auto;
					grid-template-rows: min-content auto;
					justify-content: flex-start;
					align-content: center;
					text-align: left;
					white-space: initial;
					overflow: hidden;
					font-family: Roboto;
					em {
						grid-column: 2/3;
						font-style: normal;
						opacity: 0.8;
					}
					strong {
						grid-column: 2/3;
						font-size: 14pt;
						font-weight: normal;
					}
				}
			}

			/*
			.changelogsWrapper {
				position: relative;
				overflow: hidden;
				height: 100%;

				box-sizing: border-box;
				border: 1px solid $bgLight;
				border-radius: 3px;

				&.fullscreen {
					position: fixed;
					box-sizing: border-box;
					z-index: 1;
					top: 0px;
					left: 0px;
					margin: 0;
					padding: 0px;

					width: 100vw;
					height: 100vh;

					border: none;
					background-color: $bgDark;
					background-image: url("../img/LDtk-simple.svg");
					background-repeat: no-repeat;
					background-position: center 15px;
					background-size: 200px;
					padding-top: 120px;

					.changelogs {
						padding: 32px;
						padding-top: 0;
						max-width: 960px;
						margin: auto;
					}

					button.fullscreen {
						background: $orange;
						box-shadow: 0px 0px 32px $orange;
					}
				}

				button.fullscreen {
					position: absolute;
					z-index: 2;
					bottom: 4px;
					right: 24px;
					padding: 4px;
					background-color: $bgMed;
					border: 1px solid $bgLight;
					border-radius: 3px;
					width: auto;

					.icon {
						width: 32px;
						height: 32px;
						margin: 0;
					}

					&:hover {
						border-color: $orange;
					}
				}

				.changelogs {
					padding: 16px;
					box-sizing: border-box;
					overflow-x: hidden;
					overflow-y: auto;
					height: 100%;

					h1 {
						color: $orange;
						margin: 0;
						padding: 0;
						margin-bottom: 8px;
					}

					.markdown {
						font-size: 10pt;
						color: #b5becd;

						* {
							user-select: text;
						}

						h1 {
							padding-bottom: 8px;
							margin-bottom: 8px;
							border-bottom: 1px solid $orange;
						}

						span.important {
							color: $help;
						}

						span.internal {
							font-weight: bold;
							color: $lightRed !important;
							background-color: $softRed;
							padding: 2px 4px;
							border-radius: 3px;
						}

						h2 {
							border: none;
							margin-top: 32px;
							margin-bottom: 8px;
							text-transform: none;
							font-size: 14pt;
						}

						ul {
							margin-bottom: 8px;
							list-style: disc;
							padding-left: 20px;
							>li+li {
								margin-top: 8px;
							}
							ul {
								margin-top: 8px;
								list-style-type: square;
								padding-left: 16px;
							}
						}

						table {
							width: 100%;
							max-width: 900px;
							margin-left: 16px;
							margin-bottom: 32px;
							border-spacing: 0;

							tr {
								th {
									padding: 4px;;
									font-variant: small-caps;
									text-align: left;
									color: $bgLighter;
									border-bottom: 1px solid $bgLight;
								}

								td {
									vertical-align: top;
									padding: 16px 8px;
									border-bottom: 1px solid $bgDark;
									background-color: $bgMed;

									br {
										display: block;
										margin-bottom: 10px;
										content: " ";
									}

									ul {
										list-style: circle;
										li {
											margin: 0;
											padding: 4px 4px;
											&:first-child {
												padding-top: 0px;
											}
										}
									}
									&:nth-child(1) {
										width: 150px;
									}
									&:nth-child(2) {
										width: 150px;
									}
								}

								&.internal td {
									color: $lightRed;
									font-size: 90%;
									background-image: url("../img/stripesLight.png");
									background-color: $softRed;
									opacity: 0.7;
								}

								&.important td {
									color: $help;
									background-color: $helpDark;
								}

								code {
									background-color: black;
									padding: 2px 3px;
									border-radius: 3px;
								}
							}
						}

						strong {
							color: white;
						}

						.only {
							color: $bgLighter;
						}

						a.discreet {
							// text-decoration: none;
							color: inherit;
							&:hover {
								color: $orange;
							}
						}
					}

					.rawMarkdown {
						display: none;
					}
				}
			}*/

		}


		.footer {
			display: grid;
			grid-template-columns: min-content auto;
			box-sizing: border-box;
			padding-top: 32px;
			// min-height: 150px;

			// background-image: url("../img/homeBg_footer.png");
			// background-repeat: no-repeat;
			// background-position: center top;
			// background-size: contain;

			a img {
				height: 3em;
			}

			span {
				color: $bgLighter;
				text-align: right;
				margin-top: 20px;
				font-size: 0.8em;
			}
		}

	}
}


.palette {
	display: grid;
	grid-template-rows: auto fit-content(24px);
	align-items: center;
	width: 100%;
	height: 100%;
	background-color: $bgDark;
	image-rendering: pixelated;

	&.invalid {
		background: url("../img/stripes.png");
		.warning {
			color: $red;
			margin: 50px;
		}
	}

	.toolOptions {
		display: flex;
		flex-wrap: nowrap;
		padding-top: 1px;

		>*+* {
			margin-left: 10px;
		}

		>* {
			flex: 0 1 auto;
		}

		label {
			display: flex;
			align-items: center;
			flex-wrap: nowrap;
			white-space: nowrap;

			input[type=checkbox] {
				flex: 0 0 auto;
				width: 24px;
				height: 24px;
				margin-right: 4px;
			}
		}
		button {
			width: auto;
			padding-top: 4px;
			text-transform: none;
			padding-bottom: 4px;
			margin-bottom: 3px; // to show dropshadow
		}
	}


	ul.niceList {
		margin: 0;
		padding: 4px;
		width: 100%;
		height: 100%;
		border: 0px;

		>li {
			display: flex;
			// margin-bottom: 1px;
			min-height: 16px;
			cursor: pointer;
			box-shadow: none;
			border: 0;
			border-left: 6px solid white; // color set in code


			&:not(.active):hover {
				outline: 1px solid white !important;
				outline-offset: -1px;
			}
		}

		li.entity {
			overflow: hidden;
			.entityPreview {
				margin-right: 8px;
			}
		}

		li.color {
			padding-left: 10px;
			overflow: hidden;
			line-height: 32px;
		}

		li.active {
			outline: 1px solid white !important;
			outline-offset: -1px;
			// box-shadow:
			// 	0px 0px 2px black inset,
			// 	0px 0px 2px black inset;
		}
	}
}


.tilesetPicker {
	position: relative;
	overflow: hidden;
	box-sizing: border-box;

	padding: 1px;
	width: 100%;
	height: 100%;

	canvas {
		image-rendering: pixelated;
		// box-shadow: 0px 0px 32px black;
		// outline: 1px solid $bgLight;
	}

	&.singleTileMode .selectionsWrapper .tileCursor.selection {
		border-width: 1px;
		border-color: $orange;
		border-style: solid;
		box-shadow: 0px 0px 16px $red;;
	}

	.selectionsWrapper,
	.cursorsWrapper {
		pointer-events: none;
		position: relative;

		.tileCursor {
			position: absolute;
			z-index: 1;
			min-width: 1px;
			min-height: 1px;
			box-sizing: border-box;
			pointer-events: none;
			border-color: rgba(255, 255, 255, 0.5);
			border-style: solid;
			border-width: 0px;

			&.mouseOver {
				border-color: rgba(255, 255, 255, 0.25);
			}

			&.randomMode {
				border-width: 1px;
				border-color: rgba(144, 238, 144, 0.5);
				border-style: dotted;
			}

			&.randomMode.selection {
				border-color: rgba(144, 238, 144, 1);
				border-style: solid;
			}

			&.stampMode.selection {
				border-color: #f3e4a4;
				border-style: solid;
			}

			&.left {	border-left-width: 1px; }
			&.right {	border-right-width: 1px; }
			&.top {		border-top-width: 1px; }
			&.bottom {	border-bottom-width: 1px; }

			// &.stampMode.left {	box-shadow: 0px -3px 0px #61a187; }
			// &.stampMode.left {		box-shadow: -3px 0px 0px #ff8344; }
			// &.stampMode.right {		box-shadow: 3px 0px 0px #ff8344; }
			// &.stampMode.top {		box-shadow: 0px -3px 0px #ff8344; }
			// &.stampMode.bottom {	box-shadow: 0px 3px 0px #ff8344; }

			&.remove {
				border-color: red;
			}


		}
	}
}

.window.singleTilePicker {
	z-index: 99;
	.content {
		width: 60vw;
		height: 60vh;
	}
}

.entityInstanceEditor {
	position: absolute;
	z-index: 10;

	width: 300px;
	box-sizing: border-box;

	box-shadow: -4px 0px 16px rgba(0, 0, 0, 0.6);
	background-color: $bgDark;

	.entityInstanceWrapper {
		overflow: auto;
		max-height: 90vh;
		padding: 10px;
	}

	.resizeBar {
		position: absolute;
		top: 0;
		left: 0;
		width: 4px;
		height: 100%;

		background-color: $orange;
		cursor: ew-resize;
	}

	header {
		display: grid;
		grid-template-columns: auto min-content;
		width: 100%;
		padding-bottom: 4px;
		margin-bottom: 4px;
		overflow: hidden;

		font-weight: bold;
		color: $orange;

		border-bottom: 1px solid $bgLight;


		a {
			display: inline-block;
			padding: 2px 4px;
			font-size: 8pt;
			color: black;
			border-radius: 2px;
			background-color: $orange;
			cursor: pointer;

			&:hover {
				background-color: white;
			}
		}
	}

	.empty {
		color: $bgLighter;
		font-style: italic;
	}

	ul.form {
		padding: 0;
		border: none;
		&>li>label {
			flex: 0 0 100%;
			padding: 0;
			padding-top: 8px;
			text-align: left;
			font-size: 10pt;
			text-transform: none;
		}

		span.inputWithDefaultOption {
			display: flex;
			align-items: center;
			opacity: 1 !important;
			padding: 0 !important;
			flex: 1 0 auto !important;
			span.value {
				flex: 1 0 auto;
			}
		}

		a.reset {
			flex: 0 0 auto;
			align-self: center;
			margin-left: 10px;
			font-size: 0.75em;
			text-decoration: underline;
			color: $orange;
			white-space: nowrap;
			padding: 2px 4px;
			border-radius: 3px;
			cursor: pointer;

			&:hover {
				text-decoration: none;
				color: black;
				background-color: $orange;
			}
		}

		span.usingDefault {
			flex: 0 0 0px;
			align-self: center;
			margin-left: 10px;
			font-size: 0.75em;
			color: $bgLighter;
			opacity: 1;
		}


		button.removePoint {
			flex: 0.2 1 0px;
		}

		button.locate,
		button.fileSelectButton {
			flex: 0 1 0px;
		}

		input[type=color] {
			width: 100%;
		}

		input.fileNotFound {
			color: $orange;
			border-color: $orange;
			background-color: $darkRed;
			box-shadow: 0px 0px 8px $red;
		}

		textarea {
			height: auto;
			overflow-x: auto;
			overflow-y: hidden;
			font-size: 8.5pt;
		}

		a.usingDefault {
			display: flex;
			text-decoration: none;
			border: 1px dashed $bgLight;
			padding: 8px;
			align-items: center;
			background-color: $bgMed;
			background-image: url("../img/stripes.png");

			&.required {
				border-color: $orange;
				box-shadow: 0px 0px 4px $red, 0px 0px 8px $red inset;
				background-color: $darkRed;
				span.value {
					text-shadow: none;
					color: $orange !important;
				}
				span.label {
					text-shadow: none;
					color: $orange !important;
				}
			}

			&.checkbox {
				padding: 0;
				padding-right: 8px;
			}

			span {
				opacity: 1;
				text-shadow: 2px 0px 4px $bgMed, 0px 2px 4px $bgMed, -2px 0px 4px $bgMed, 0px -2px 4px $bgMed;
				&.value {
					flex: 1 1 auto;
					color: white;
					font-style: italic;
				}
				&.label {
					font-size: 0.75em;
					font-style: italic;
					color: $bgLighter;
				}
			}

			&:hover {
				border-color: $orange;
			}
		}
		select.usingDefault {
			border: 1px dashed $bgLight;
			padding: 8px;
			color: white;
			background-color: $bgMed;
			background-image: url("../img/stripes.png");
		}

		button.usingDefault:not(.required) {
			background-image: url("../img/stripes.png");
		}
		button.required {
			outline: 1px solid $orange;
			box-shadow: 0px 0px 32px $red;
		}

		span.point {
			color: $bgLighter;
			padding: 4px;
			font-style: italic;
			border-radius: 6px;
			background-color: $bgMed;
		}

		li.F_Path {
			button {
				flex: 0 1 0px;
				padding: 0 4px;
				align-self: stretch;
			}
		}

		div.array {
			display: grid;
			grid-template-columns: auto;
			gap: 2px;
			box-sizing: border-box;
			margin-left: 4px;
			padding: 8px;
			padding-right: 2px;
			overflow-x: hidden;
			overflow-y: auto;
			border-left: 1px solid white;
			border-bottom-left-radius: 8px;

			ul.values {
				li {
					display: grid;
					gap: 4px;
					grid-template-columns: auto min-content;
					overflow-x: hidden;

					select {
						width: 100%;
						padding: 0;
					}

					.colorWrapper,
					input[type=text] {
						width: 100%;
					}

					&.compact {
						color: $bgLighter;
						font-size: 9pt;
						padding-bottom: 4px;
					}
				}
				&.sortable li {
					grid-template-columns: min-content auto min-content;
				}
			}


			button.remove {
				padding: 0;
				margin: 0;
			}
		}

	}
}


.window.panel {
	button.delete {
		flex: 0 0 32px;
	}
}

.window.panel.layerDefs,
.window.panel.tilesetDefs {
	.content{
		display: grid;
		height: 100%;
		justify-content: stretch;
		gap: 16px;
		grid-template-rows: min-content auto;
		grid-template-columns: 200px auto;

		.path {
			flex: 1 0 100%;
			box-sizing: border-box;
		}

		> .header {
			grid-column: 1/3;
			h2 {
				margin-bottom: 8px;
			}
		}

		>.mainList {
			display: grid;
			grid-template-rows: auto min-content;
			.error {
				padding: 2px 8px;
				font-size: 8pt;
			}
		}
	}
}


.window.panel.editProject {
	.content {
		display: grid;
		grid-template-columns: auto;
		grid-template-rows: repeat(3, min-content);
		gap: 16px;
		height: 100%;

		ul.form>li>label:first-of-type {
			flex: 0 0 250px;
		}

		li.advanced {
			label {
				flex: 0 0 auto !important;
				white-space: nowrap;
			}
		}

		li.advancedWarning {
			display: block;
			color: $lightRed;
			a {
				cursor: pointer;
				&:hover {
					color: white;
				}
			}
		}

		li.pngPattern {
			position: relative;
			dl.guide {
				position: absolute;
				z-index: 2;

				display: grid;
				grid-template-columns: min-content auto;
				top: 48px;
				right: 0;
				padding: 16px;
				border-radius: 3px;
				background-color: $helpDark;

				dt {
					font-family: monospace;
					color: $orange;
				}
				dd {
					padding-left: 8px;
					padding-bottom: 8px;
				}
			}
			.example {
				flex: 1 0 100%;
				text-align: right;
				color: $help;
				font-family: monospace;
			}
		}

		h2 {
			margin-bottom: 0;
		}

		.buttons.main {
			margin-bottom: 10px;
		}
	}
}


.window.panel.editEnums {
	.content {
		display: grid;
		grid-template-columns: 200px auto;
		grid-template-rows: min-content auto;
		gap: 16px;
		height: 100%;

		.header {
			grid-column: 1/3;
		}
		.enumList {
			grid-column: 1/2;
			display: grid;
			grid-template-rows: auto min-content;
			overflow: hidden;
			ul {
				overflow: auto;
				li.missing {
					background-color: $darkRed;
				}
			}

			button[class^="import"]{
				flex: 1 0 100%;
			}
		}
		ul.enumForm {
			grid-column: 2/3;

			button.createEnumValue {
				flex: 1 0 100%;
			}

			ul.enumValues {
				li {
					display: grid;
					gap: 3px;
					grid-template-columns: min-content 32px auto 32px;
					margin-bottom: 4px;
					input[type=color] {
						height: 24px;
					}
					input[type=text] {
						padding: 3px;
					}
					button {
						padding: 0;
					}
				}
			}


			.onlyExternal {
				display: none;
			}

			&.externalEnum {
				.noExternal {
					display: none;
				}
				li.onlyExternal {
					display: flex;
				}
				ul.enumValues li {
					grid-template-columns: auto;
				}

				.path {
					padding: 5px;
					text-align: left;
					border: 1px solid $bgLight;
				}

				.exploreTo {
					margin-left: 4px;
					padding: 6px;
				}
			}
		}
	}
}


.window.panel.layerDefs {
	.mainList {
		grid-row: 2/4;
		ul li {
			grid-template-columns: min-content auto min-content;

			.icon {
				width: 1.8em;
				height: 1.8em;
			}
		}
	}
	.mainList ul:empty::before {
		content: "No layer";
	}
	.typeIcon .icon {
		width: 2.5em;
		height: 2.5em;
	}
	ul.intGridValues {
		li {
			position: relative;
		}

		li+li {
			margin-top: 8px;
		}

		li.value {
			display: grid;
			align-items: center;
			grid-template-columns: 2em auto 64px;
			gap: 4px;

			input[type=color] {
				width: 100%;
				height: 100%;
			}

			input.name {
				text-align: center;
				font-style: italic;
			}

			span.id {
				text-align: center;
				font-weight: bold;
			}

			a.remove {
				display: none;
				position: absolute;
				top: 0px;
				right: 0px;
				background: black;
				color: white;
				padding: 3px;
				text-decoration: none;
			}
		}

		li.value.removable a.remove {
			display: block;
		}

		li.add button {
			padding: 0px;
			text-align: center;
			font-weight: bold;
			font-size: 200%;
			text-decoration: none;
			color: white;
		}
	}

	ul.form .IntGrid,
	ul.form .IntGridAutoLayer,
	ul.form .AutoLayer,
	ul.form .Tiles,
	ul.form .Entities {
		display: none;
	}

	ul.form.type-IntGrid .IntGrid,
	ul.form.type-IntGridAutoLayer .IntGridAutoLayer,
	ul.form.type-AutoLayer .AutoLayer,
	ul.form.type-Entities .Entities,
	ul.form.type-Tiles .Tiles {
		display: flex;
	}
}


body.sorting ul.collapsedSortTarget {
	display: block !important;
}

.window.panel.worldPanel {
	left: 32px !important;
	width: auto;

	.wrapper {
		padding: 8px;
		border-left: 2px solid $bgLighter;
		border-right: 1px solid $bgLight;
		box-shadow: -8px 0px 0px rgba(0, 0, 0, 0.5), 2px 0px 0px rgba(0, 0, 0, 0.5);
	}

	.content {
		display: grid;
		grid-auto-rows: min-content;
		gap: 8px;
		height: 100%;
		width: $mainPanelNormalWid;

		#worldForm {
			display: none;
			margin-top: -10px;
			margin-bottom: 16px;
			padding: 12px;
			padding-bottom: 32px;

			border: none;
			border-bottom: 1px solid $bgLight;
			border-bottom-left-radius: 3px;
			border-bottom-right-radius: 3px;

			background-color: $bgDark;
			box-shadow: 0px 4px 16px black inset;

			h3 {
				color: $bgLighter;
				border-color: $bgLighter;
			}

			>ul {
				border: 0;
				padding: 0;
			}
		}

		#levelForm {
			.bg {
				align-items: stretch;
				button.pick {
					width: 0;
				}
				.pos {
					display: flex;
					justify-content: stretch;
					select {
						flex: 1 1 auto;
						font-size: 9pt;
					}
				}
			}
		}

		ul.form>li>label {
			flex: 0 0 100%;
			padding: 0;
			padding-top: 8px;
			text-align: left;
			font-size: 10pt;
			text-transform: none;
		}

		a.reset {
			flex: 0 0 auto;
			align-self: center;
			font-size: 9pt;
			text-decoration: underline;
			margin-left: 8px;
			padding: 2px 4px;
			border-radius: 3px;
			cursor: pointer;

			&:hover {
				text-decoration: none;
				color: black;
				background-color: $orange;
			}
		}

		button {
			white-space: nowrap;
		}

		button:not(.running) span.running {
			display: none;
		}
		button.running {
			outline: 1px solid $orange;
			box-shadow: 0px 0px 16px $red;
			opacity: 0.5;
			span.ready {
				display: none;
			}
		}

		ul.form .GridVania,
		ul.form .LinearHorizontal,
		ul.form .LinearVertical,
		ul.form .Free {
			display: none;
		}

		ul.form.layout-GridVania .GridVania,
		ul.form.layout-LinearHorizontal .LinearHorizontal,
		ul.form.layout-LinearVertical .LinearVertical,
		ul.form.layout-Free .Free {
			display: flex;
		}
	}
}

.window.panel.editAllAutoLayerRules {
	left: 32px !important;
	width: auto;

	.wrapper {
		padding: 8px;
		border-left: 2px solid $bgLighter;
		border-right: 1px solid $bgLight;
		box-shadow: -8px 0px 0px rgba(0, 0, 0, 0.5), 2px 0px 0px rgba(0, 0, 0, 0.5);
	}

	.content {
		display: grid;
		grid-template-rows: min-content auto;
		gap: 8px;
		height: 100%;
		width: 320px;

		header {
			display: flex;
			width: 100%;
			align-items: stretch;

			>*+* {
				margin-left: 4px;
			}

			button {
				white-space: nowrap;
				font-size: 9pt;
			}

			label {
				display: flex;
				flex-wrap: nowrap;
				align-items: center;
				padding-right: 4px;

				font-size: 9pt;
				color: $bgLighter;

				background-color: $bgDark;
				border-radius: 3px;
				cursor: pointer;

				input {
					cursor: pointer;
				}

				&:hover {
					color: black;
					background-color: $orange;
				}
			}
		}

		ul.ruleGroups {
			padding: 8px;
			border: 1px solid $bgLight;
			overflow-y: auto;
			background-color: $bgDark;
			box-shadow: 0px 4px 8px black inset;

			>li:last-child {
				margin-bottom: 30px;
			}

			li.placeholder {
				display: grid;
				cursor: not-allowed;
				strong {
					font-weight: bold;
				}
				em {
					color: $bgLighter;
				}
			}

			li div.warning {
				max-width: 300px;
			}

			&:empty {
				background-image: url("../img/stripes.png");
				box-shadow: 0px 0px 16px rgba(0, 0, 0, 0.4) inset;
				text-align: center;
				padding-top: 30px;
				border: 1px solid $bgLight;
			}

			>li { // Group
				position: relative;
				border: 1px solid $bgLight;
				padding: 4px;
				margin-bottom: 16px;
				box-shadow: 0px 2px 4px black;
				background-color: $bgMed;

				&.highlight header {
					outline: 1px solid #ff00ff;
					background-color: #770077;
				}

				&.inactive {
					background-image: url("../img/stripes.png");
					background-color: $darkRed;
					header {
						background-color: $darkRed;
						background-image: url("../img/stripes.png");
					}
					ul.ruleGroup {
						opacity: 0.66;
					}
				}

				&.collapsed {
					border-style: dashed;
					opacity: 0.66;
					box-shadow: none;
					margin-bottom: 4px;
					padding-bottom: 0;

					header .name {
						cursor: cell;
					}
					ul.ruleGroup {
						display: none;
					}
				}

				ul.collapsedSortTarget {
					display: none;
					position: absolute;
					padding: 8px;
					top: 0;
					left: 0;
					bottom: 0;
					right: 0;
					overflow: hidden;

					&:not(:empty) {
						outline: 2px solid $orange;
					}

					* {
						visibility: hidden;
					}
				}


				header {
					display: grid;
					grid-template-columns: auto repeat(4, min-content);
					align-items: stretch;
					width: calc( 100% + 6px );
					height: 32px;
					margin: -3px;
					border-bottom: 2px solid $bgDark;

					background-color: $bgLight;

					div.name {
						display: grid;
						align-content: center;
						height: 100%;
						padding-left: 8px;

						font-weight: bold;

						overflow-x: hidden;
						white-space: nowrap;
						max-width: 150px;

						cursor: zoom-out;

						&:hover {
							background-color: $orange;
						}
					}
					input.name {
						display: none;
						width: 110px;
					}

					button {
						padding: 3px;
						margin: 0;
						min-width: 24px;
						&.add {
							font-weight: bold;
							font-size: 12pt;
						}
					}

					button.off {
						opacity: 0.3;
						background-color: $red;
					}
				}


				ul.ruleGroup {
					position: relative;

					display: grid;
					align-items: flex-start;
					grid-template-columns: auto;
					grid-auto-rows: min-content;
					gap: 2px;

					margin-top: 16px;

					&:empty {
						background-image: url("../img/stripes.png");
						box-shadow: 0px 0px 16px rgba(0, 0, 0, 0.4) inset;
						text-align: center;
						padding-top: 30px;
						padding-bottom: 30px;

						&::before {
							content: "Use [+] above to add a new rule";
						}
					}

					li { // Rule
						position: relative;
						display: grid;
						box-sizing: border-box;
						gap: 2px;
						grid-template-columns: min-content 80px auto repeat(2, min-content);
						align-items: center;
						padding: 2px;

						background-color: $bgDark;
						border-radius: 3px;
						border: 1px dashed transparent;

						&.highlight {
							outline: 1px solid #ff00ff;
							background-color: #770077;
						}

						&.inactive {
							background-image: url("../img/stripes.png");
							background-color: $darkRed;
						}

						button.insert {
							position: absolute;
							z-index: 2;
							display: none;
							right: 0px;
							padding: 0;
							width: 18px;
							height: 18px;
							font-weight: bold;
							opacity: 0.6;
							&:hover {
								opacity: 1;
							}
							&.before {
								top: -10px;
							}
							&.after {
								bottom: -10px;
							}
						}
						&:hover button.insert {
							display: block;
						}

						&.last {
							border-color: white;
						}

						.options {
							display: grid;
							grid-template-columns: repeat(6, 22px);
							gap: 2px;

							&>* {
								padding: 3px;
								background-color: $bgMed;
								border-radius: 4px;
								&:hover {
									background-color: $bgLight;
								}
							}

							.random {
								grid-column: 1/5;
								display: flex;
								flex-wrap: nowrap;
								align-items: center;

								input[name="random"] {
									width: 40px;
									font-size: 9pt;
									padding-top: 1px;
									padding-bottom: 1px;
									background-color: $bgMed;
									&:focus, &.editing {
										background-color: $bgDark;
									}
									&.max {
										color: $bgLight;
									}
									&.off {
										color: $red;
									}
								}

								span {
									font-size: 8pt;
									color: $bgLighter;
									padding-right: 8px;
								}
							}

							input[name=xModulo] {
								grid-column: 5/6;
							}
							input[name=yModulo] {
								grid-column: 6/7;
							}
							input[name=xModulo],
							input[name=yModulo] {
								// width: 20px;
								font-size: 9pt;
								text-align: center;
								color: $help;
								&:not(.default) {
									border: 1px solid $green;
								}
								&.default {
									color: $bgLighter;
								}
							}

							a {
								flex: 0.5 1 auto;
								display: grid;
								align-content: center;
								justify-content: center;
								border: 1px solid $bgLight;
								text-align: center;
								font-size: 8pt;
								cursor: pointer;

								&:hover {
									color: white !important;
								}

								&.on {
									color: $green;
									font-weight: bold;
									text-shadow: 0px 0px 4px $green;
									border-color: $green;
								}
								&.off {
									opacity: 0.4;
									color: $red;
									font-style: italic;
									border: 1px dashed $red;
									background-color: $darkRed;
									.icon {
										opacity: 0.5;
									}
								}

								&.on span.off {
									display: none;
								}
								&.off span.on {
									display: none;
								}

								&.break.on {
									color: #009dff;
									border-color: #009dff;
									text-shadow: 0px 0px 4px #009dff;
								}

								&.active.on {
									border-color: $orange;
								}
							}
						}

						button {
							padding: 4px;
						}

						input[type=text] {
							border-color: transparent;
							&:focus {
								border-color: $orange;
							}
						}

						>.preview {
							margin-right: 8px;
							cursor: pointer;
							display: grid;
							justify-items: center;

							.error {
								display: grid;
								justify-content: center;
								align-content: center;

								box-sizing: border-box;
								padding: 10px;
								min-width: 32px;
								min-height: 32px;
								color: $red;

								background-color: $darkRed;
								background-image: url("../img/stripes.png");
								border: 1px solid $red;
							}

							.autoPatternGrid {
								border-color: $bgMed;
							}

							&:hover {
								outline: 1px solid $orange;
							}
						}

					}
				}
			}

		}
	}
}


$patternSize : 32px;
.autoPatternGrid {
	display: grid;
	gap: 2px;

	&.size-1 {
		grid-template-columns: repeat(1,auto);
	}

	&.size-3 {
		grid-template-columns: repeat(3,auto);
	}

	&.size-5 {
		grid-template-columns: repeat(5,auto);
	}

	&.size-7 {
		grid-template-columns: repeat(7,auto);
	}

	&.preview {
		gap: 1px;
		border: 1px solid $bgLight;

		&.size-1 .cell {
			zoom: 1;
		}
		&.size-3 .cell {
			zoom: 0.5;
		}
		&.size-5 .cell {
			zoom: 0.3;
		}
		&.size-7 .cell {
			zoom: 0.2;
		}

		.cell {
			opacity: 0.5;
		}

		.cell.empty {
			background: $bgMed;
			box-shadow: none;
			border: none;
		}
		.cell.center {
			opacity: 1;
			canvas {
				box-sizing: border-box;
				padding: 2px;

				background-color: black;
				border: 1px solid white;
				border-radius: 3px;
				box-shadow: 0px 2px 4px black;

				&.multi {
					box-shadow:
						2px 2px 0px black,
						3px 3px 0px white;
				}
			}
		}

		&.size-3 .cell.center canvas {
			zoom: 2;
			margin-left: -50%;
			margin-top: -50%;
		}
		&.size-5 .cell.center canvas {
			zoom: 2;
			margin-left: -50%;
			margin-top: -50%;
		}
		&.size-7 .cell.center canvas {
			zoom: 3;
			margin-left: -75%;
			margin-top: -75%;
		}
	}

	.stampPreview {
		position: absolute;
		z-index: 10;
		box-sizing: border-box;

		box-shadow: 0px 0px 4px black inset, 0px 0px 8px black inset, 0px 0px 8px black;
		border: 3px solid $orange;
		outline: 2px solid black;
		pointer-events: none;
	}

	.cell {
		display: grid;
		position: relative;
		justify-content: center;
		align-content: center;
		width: $patternSize;
		height: $patternSize;
		border: 1px dotted $bgLight;
		background-color: $bgMed;
		box-shadow: 0px 0px 2px black inset;
		border-radius: 4px;

		&.editable {
			cursor: pointer;
			&:hover {
				border-color: $orange;
			}
		}


		&.empty {
			box-shadow: 0px 2px 4px black inset;
			background-image: url("../img/stripes.png");
			border-radius: 0px;
		}

		&.not {
			outline: 2px solid $red;
			outline-offset: -5px;

			.cross {
				width: $patternSize;
				height: $patternSize;
				position: absolute;
				top: 0;
				left: 0;
				z-index: 1;

				background-image: url("../icons/cross.png");
				background-repeat: no-repeat;
				background-size: 80%;
				background-position: center center;
				image-rendering: pixelated;
				width: $patternSize;
				height: $patternSize;
			}
		}
		&.anything {
			&::before {
				content: "?";
			}
		}

		&.unknown {
			background-color: $darkRed;
			border-color: $red;
			outline: 2px dashed $red;
			outline-offset: -4px;
			&::before {
				content: "!";
			}
		}

		&.center {
			border: 1px dashed white;
			border-radius: 4px;
		}

		canvas {
			pointer-events: none;
			position: absolute;
			z-index: 2;
			image-rendering: pixelated;
		}
	}
}

.window.dialog.perlinSettings {
	.content {
		width: 300px;
		ul.form {
			li {
				align-items: stretch;
			}
			label {
				flex: 0 0 50px;
			}
			input#perlinSeed {
				flex: 1 0 80px;
			}
			button {
				padding-top: 0;
				padding-bottom: 0;
			}
		}
	}
}


.window.dialog.ruleEditor {
	$gutter: 8px;

	>.wrapper {
		padding: $gutter;
		justify-self: left;
		margin-left: 80px;
	}

	>.wrapper .content {
		display: grid;
		gap: $gutter;
		grid-template-rows: repeat(3, min-content);
		padding: 4px;
		width: min-content;
		min-width: 300px;
		position: relative;

		&:not(.guided) {
			.explain,
			.help {
				display: none;
			}
		}
		&.guided {
			button.guide {
				display: none;
			}
		}

		.explain,
		.tileSettings,
		.pattern .editor,
		.pattern .values {
			width: 100%;
			height: 100%;
			padding: 16px;
			box-sizing: border-box;
			background-color: $bgDark;
			border-radius: 3px;
		}

		.debugInfos {
			position: absolute;
			right: -5px;
			bottom: -8px;
			font-size: 8pt;
			color: $bgLighter;
		}

		.explain {
			display: grid;
			align-items: center;
			min-height: calc( 4em + 16px * 2 );
			color: $help;
			font-size: 8.5pt;
			text-align: center;
			transition: background-color 0.3s;

			&:not(:empty) {
				transition: background-color 0.1s;
				background-color: $helpDark;
			}

			p {
				margin: 0;
				padding: 0;
			}
		}

		.tileSettings {
			display: grid;
			justify-items: stretch;
			grid-template-columns: auto min-content min-content;

			.picker {
				margin-left: $gutter;
				canvas {
					image-rendering: pixelated;
					zoom: 2;
					border: 1px solid $orange;
					cursor: pointer;
					width: 24px !important;
					height: 24px !important;

					&:hover {
						border-color: white;
					}
					&.empty {
						border-color: $red;
						box-shadow: 0px 0px 32px $red;
					}
				}
			}

			.options:not(:empty) {
				margin-left: $gutter;
			}
		}

		.pattern {
			display: grid;
			grid-template-columns: min-content auto;
			gap: $gutter;

			.editor{
				display: grid;
				grid-template-rows: min-content auto;
				gap: 4px;

				select {
					width: 100%;
					overflow: hidden;
				}

				.grid {
					display: grid;
					justify-items: center;
					align-items: center;
				}
			}

			.values {
				ul {
					display: grid;
					height: 100%;
					gap: 2px;

					li {
						display: grid;
						align-content: center;
						justify-content: center;
						padding: 8px;

						text-shadow: 0px 2px 1px black, 0px 0px 4px black;

						border: 1px solid $bgMed;
						cursor: pointer;

						&:hover {
							outline: 1px solid white;
							outline-offset: -1px;
						}

						&.active {
							border-color: $orange;
							outline: 1px solid black;
							outline-offset: -2px;
							box-shadow: 0px 0px 8px $red;
						}
					}
					li.any {
						font-style: italic;
						background-image: url("../img/any.png");
					}
				}

			}
		}

		.help {
			margin-top: 8px;
			p {
				margin: 0;
				padding: 0;
			}
			ul {
				display: grid;
				gap: 2px;
				width: 100%;
				margin-top: 8px;

				li {
					font-size: 9pt;
					padding: 6px;
					border-radius: 3px;
					background-color: $bgDark;
				}
				li+li {
					margin-left: 4px;
				}
			}
		}
	}
}

.window.panel.tilesetDefs {
	.mainList ul:empty::before {
		content: "No tileset";
	}

	.content {
		grid-template-rows: min-content min-content min-content auto;
		.mainList {
			grid-row: 2/5;
		}
		ul.form {
			grid-row: 2/3;
		}
		.tilesDemo {
			grid-row: 3/4;
		}
		.pickerWrapper {
			grid-row: 4/5;
		}

		.tilesDemo canvas {
			display: block;
			width: 100%;
			image-rendering: pixelated;
		}
		.pickerWrapper {
			overflow: hidden;
			outline: 1px solid white;
			box-shadow: 0px 4px 16px rgba(0, 0, 0, 0.4) inset;
			background-color: rgba(0, 0, 0, 0.4);
		}
	}
}


.window.panel.entityDefs {
	.content{
		display: grid;
		height: 100%;
		justify-content: stretch;
		gap: 16px;
		grid-template-rows: min-content auto;
		grid-template-columns: 200px auto;

		>.header {
			grid-column: 1/3;
			h2 {
				margin-bottom: 8px;
			}
		}

		>.entityList {
			grid-row: 2/3;
			display: grid;
			grid-template-rows: auto min-content;
			overflow: hidden;
			ul {
				overflow: auto;
				li {
					grid-template-columns: min-content auto min-content;
				}
			}
			ul:empty::before {
				content: "No entity";
			}
		}

		>.rightColumn {
			grid-column: 2/3;
			grid-row: 2/3;
			display: grid;
			gap: 16px;
			grid-template-columns: 200px auto;
			grid-template-rows: min-content auto;

			>.entityForm {
				grid-column: 1/3;
			}

			>.fieldList {
				grid-column: 1/2;
				display: grid;
				grid-template-rows: auto min-content;
				overflow: hidden;
				ul {
					overflow: auto;
					li {
						grid-template-columns: auto min-content min-content;
						gap: 0px 2px;
						.name {
							width: 100%;
							overflow: hidden;
						}
					}
				}
				ul:empty::before {
					content: "No custom field";
				}
			}

			>.fieldForm {
				grid-column: 2/3;
				overflow: auto;

				button.convert, .F_Path.file-select {
					padding: 4px;
					flex: 0 1 0px;
					align-self: stretch;
				}
			}
		}



		button {
			white-space: nowrap;
		}


		.renderMode {
			*[class*=mode_] {
				display: none;
			}
			&.mode_Rectangle .mode_Rectangle,
			&.mode_Ellipse .mode_Ellipse,
			&.mode_Tile .mode_Tile {
				display: block;
			}

			select, canvas {
				margin-left: 4px;
			}

			select.renderMode {
				flex: 1 1 0px;
			}

			.tilePicker {
				flex: 0 0 auto;
			}
		}
	}

	.content {
		width: 900px;
	}

	.previewWrapper {
		position: relative;
		float: right;
		margin: 8px;
		border: 1px solid $bgLight;

		.entityPreview {
			width: 64px;
			height: 64px;
		}

		.label {
			position: absolute;
			z-index: 1;
			bottom: 0px;
			right: 0px;
			font-size: 7pt;
			text-transform: uppercase;
		}
	}

	input[type=color] {
		min-height: 32px;
	}

	.fieldForm {
		ul.form li>label {
			flex: 0 0 100px;
		}

		input.type {
			font-family: 'Courier New', Courier, monospace;
		}

		ul.form *[class*="F_"],
		ul.form *[class="Array"] {
			display: none;
		}
		ul.form.type-Array .Array,
		ul.form.type-F_Int .F_int,
		ul.form.type-F_Float .F_Float,
		ul.form.type-F_Bool .F_Bool,
		ul.form.type-F_Color .F_Color,
		ul.form.type-F_Enum .F_Enum,
		ul.form.type-F_Point .F_Point,
		ul.form.type-F_Text .F_Text,
		ul.form.type-F_String .F_String,
		ul.form.type-F_Path .F_Path {
			display: flex;
		}

		ul.form.type-F_Path .F_Path.file-select {
			display: initial;

		}

	}
}
